#!/usr/bin/bash
# shellcheck source=kz-common.sh
###############################################################################
# GUI wijzigen.                                                               #
#                                                                             #
# Geschreven door Karel Zimmer <info@karelzimmer.nl>.                         #
###############################################################################

PROGRAM_PATH=$(realpath "$(dirname  "$0")")
readonly PROGRAM_PATH
source  "$PROGRAM_PATH"/kz-common.sh
readonly PROGRAM_NAME=kz-gset
readonly DISPLAY_NAME=${PROGRAM_NAME/kz-/kz }
readonly RELEASE_YEAR=2015


###############################################################################
# Global constants                                                            #
###############################################################################

readonly OPTIONS_SHORT=$OPTIONS_SHORT_COMMON
readonly OPTIONS_LONG=$OPTIONS_LONG_COMMON",addappfolder:,addfavbegin:,\
addfavend:,removeappfolder:,removefav:"
readonly USAGE="Gebruik: $DISPLAY_NAME \
[--addappfolder=APPFOLDER|--removeappfolder=APPFOLDER|
                  --addfavbegin=DESKTOPFILE|--addfavend=DESKTOPFILE|
                  --removefav=DESKTOPFILE]
                 $OPTIONS_USAGE_COMMON"
readonly HELP="Gebruik: $DISPLAY_NAME [OPTIE...]

GUI wijzigen.

Opties:
      --addappfolder=APPFOLDER
                 voeg APPFOLDER toe
      --removeappfolder=APPFOLDER
                 verwijder APPFOLDER
      --addfavbegin=DESKTOPFILE
                 voeg favoriet DESKTOPFILE toe aan het begin
      --addfavend=DESKTOPFILE
                 voeg favoriet DESKTOPFILE toe aan het einde
      --removefav=DESKTOPFILE
                 verwijder favoriet DESKTOPFILE
$OPTIONS_HELP_COMMON"


###############################################################################
# Global variables                                                            #
###############################################################################

declare APPFOLDER=''
declare CONFIG_A=''
declare CONFIG_B=''
declare DESKTOPFILE=''
declare FILE_ARGUMENT=''
declare FOLDER_ARGUMENT=''
declare OPTION_ADDAPPFOLDER=false
declare OPTION_ADDFAVBEGIN=false
declare OPTION_ADDFAVEND=false
declare OPTION_REMOVEAPPFOLDER=false
declare OPTION_REMOVEFAV=false


###############################################################################
# Functions                                                                   #
###############################################################################

function check_input {
    local -i    getopt_rc=0
    local       parsed=''

    parsed=$(
        getopt  --alternative                       \
                --options       "$OPTIONS_SHORT"    \
                --longoptions   "$OPTIONS_LONG"     \
                --name          "$DISPLAY_NAME"     \
                --              "$@"
        )       || getopt_rc=$?
    if [[ $getopt_rc -ne $SUCCESS ]]; then
        info "$USAGELINE" >&2
        exit $ERROR
    fi
    eval set -- "$parsed"
    process_common_options "$@"

    while true; do
        case $1 in
            --addappfolder)
                if $OPTION_ADDAPPFOLDER; then
                    error "Optie '$1' eenmaal opgeven."
                    info "$USAGELINE" >&2
                    exit $ERROR
                else
                    OPTION_ADDAPPFOLDER=true
                    FOLDER_ARGUMENT=$2
                fi
                shift 2
                ;;
            --removeappfolder)
                if $OPTION_REMOVEAPPFOLDER; then
                    error "Optie '$1' eenmaal opgeven."
                    info "$USAGELINE" >&2
                    exit $ERROR
                else
                    OPTION_REMOVEAPPFOLDER=true
                    FOLDER_ARGUMENT=$2
                fi
                shift 2
                ;;
            --addfavbegin)
                if $OPTION_ADDFAVBEGIN; then
                    error "Optie '$1' eenmaal opgeven."
                    info "$USAGELINE" >&2
                    exit $ERROR
                else
                    OPTION_ADDFAVBEGIN=true
                    FILE_ARGUMENT=$2
                fi
                shift 2
                ;;
            --addfavend)
                if $OPTION_ADDFAVEND; then
                    error "Optie '$1' eenmaal opgeven."
                    info "$USAGELINE" >&2
                    exit $ERROR
                else
                    OPTION_ADDFAVEND=true
                    FILE_ARGUMENT=$2
                fi
                shift 2
                ;;
            --removefav)
                if $OPTION_REMOVEFAV; then
                    error "Optie '$1' eenmaal opgeven."
                    info "$USAGELINE" >&2
                    exit $ERROR
                else
                    OPTION_REMOVEFAV=true
                    FILE_ARGUMENT=$2
                fi
                shift 2
                ;;
            --)
                shift
                break
                ;;
            *)
                shift
                ;;
        esac
    done

    if [[ "$*" ]]; then
        error 'Geen argumenten toegestaan.'
        info "$USAGELINE" >&2
        exit $ERROR
    fi

    APPFOLDER=$FOLDER_ARGUMENT
    if ($OPTION_ADDFAVBEGIN || $OPTION_ADDFAVEND || $OPTION_REMOVEFAV) &&
        [[ $FILE_ARGUMENT != *.desktop ]]; then
        error "Bestandsnaam moet eindigen met '.desktop'."
        info "$USAGELINE" >&2
        exit $ERROR
    fi
    DESKTOPFILE=$FILE_ARGUMENT

    check_user
}


function process_input {
    if $OPTION_ADDAPPFOLDER; then
        process_option_addappfolder
    elif $OPTION_REMOVEAPPFOLDER; then
        process_option_removeappfolder
    elif $OPTION_ADDFAVBEGIN; then
        process_option_addfavbegin
    elif $OPTION_ADDFAVEND; then
        process_option_addfavend
    elif $OPTION_REMOVEFAV; then
        process_option_removefav
    else
        capture_gui_changes
    fi
}


function process_option_addfavbegin  {
    local favorite_apps=''

    favorite_apps=$(gsettings get org.gnome.shell favorite-apps)
    if [[ $favorite_apps = '@as []' ]]; then
        gsettings set org.gnome.shell favorite-apps "['$DESKTOPFILE']"
    elif !  printf '%s' "$favorite_apps" |
            grep --quiet --word-regexp --regexp="$DESKTOPFILE"; then
        gsettings set org.gnome.shell favorite-apps \
            "['$DESKTOPFILE', $(
                printf '%s' "$favorite_apps" | cut --delimiter='[' --fields=2
                )"
    fi
}


function process_option_addfavend  {
    local favorite_apps=''

    favorite_apps=$(gsettings get org.gnome.shell favorite-apps)
    if [[ $favorite_apps = '@as []' ]]; then
        gsettings set org.gnome.shell favorite-apps "['$DESKTOPFILE']"
    elif !  printf '%s' "$favorite_apps" |
            grep --quiet --word-regexp --regexp="$DESKTOPFILE"; then
        gsettings set org.gnome.shell favorite-apps "$(
            printf '%s' "$favorite_apps" |
            cut --delimiter=']' --fields=1
            ), '$DESKTOPFILE']"
    fi
}


function process_option_removefav  {
    local favorite_apps=''

    favorite_apps=$(gsettings get org.gnome.shell favorite-apps)
    if [[ $favorite_apps = '@as []' ]]; then
        :
    elif [[ $favorite_apps = "['$DESKTOPFILE']" ]]; then
        gsettings set org.gnome.shell favorite-apps "[]"
    else gsettings set org.gnome.shell favorite-apps "$(
        printf  '%s' "$favorite_apps"                   |
        sed     --expression="s/'$DESKTOPFILE', //g"    |
        sed     --expression="s/, '$DESKTOPFILE'//"
        )"
    fi
}


function process_option_addappfolder  {
    local app_folders=''
    local schema=''
    local path=''

    app_folders=$(gsettings get org.gnome.desktop.app-folders folder-children)

    if [[ $app_folders = '@as []' ]]; then
        set org.gnome.desktop.app-folders folder-children "['$APPFOLDER']"
    elif !  printf  '%s' "$app_folders" |
            grep    --quiet             \
                    --word-regexp       \
                    --regexp="$APPFOLDER"; then
        gsettings set org.gnome.desktop.app-folders folder-children "$(
            printf '%s' "$app_folders" | cut --delimiter=']' --fields=1
            ), '$APPFOLDER']"
    fi
    schema=org.gnome.desktop.app-folders.folder
    path=/org/gnome/desktop/app-folders/folders/$APPFOLDER/
    gsettings set "$schema":"$path" name        "$APPFOLDER"
    gsettings set "$schema":"$path" translate   true
    gsettings set "$schema":"$path" categories  "['$APPFOLDER']"
}


function process_option_removeappfolder  {
    local app_folders=''
    local schema=''
    local path=''

    app_folders=$(gsettings get org.gnome.desktop.app-folders folder-children)

    if [[ $app_folders = '@as []' ]]; then
        :
    elif [[ $app_folders = "['$APPFOLDER']" ]]; then
        gsettings set org.gnome.desktop.app-folders folder-children "[]"
    else gsettings set org.gnome.desktop.app-folders folder-children "$(
            printf '%s' "$app_folders" | sed --expression="s/, '$APPFOLDER'//"
            )"
    fi
    schema=org.gnome.desktop.app-folders.folder
    path=/org/gnome/desktop/app-folders/folders/$APPFOLDER/
    gsettings reset-recursively "$schema":"$path"
}


function capture_gui_changes {
    CONFIG_A=$(mktemp -t "$PROGRAM_NAME-A-XXXXXXXXXX.lst")
    save_configuration_database A "$CONFIG_A"
    info 'Voer nu de wijziging uit in de grafische werkomgeving.'
    read -rp 'Druk op de Enter-toets wanneer gereed [Enter]: '
    CONFIG_B=$(mktemp -t "$PROGRAM_NAME-B-XXXXXXXXXX.lst")
    save_configuration_database B "$CONFIG_B"
    report_database_changes "$CONFIG_A" "$CONFIG_B"
}


function save_configuration_database {
    local fase=${1:-fase?}
    local output_file=${2:-output_file?}


    gsettings list-recursively > "$output_file" 2> >($LOGCMD)

    sort    --unique                \
            --output="$output_file" \
            "$output_file"

    info "Inhoud configuratiedatabase vastgelegd ($fase)."
}


function report_database_changes {
    local output_file1=${1:-output_file1?}
    local output_file2=${2:-output_file2?}

    info '
WIJZIGINGen in de configuratiedatabase,
< is de oude   instelling (A),
> is de nieuwe instelling (B):'
    diff "$output_file1" "$output_file2" | grep --regexp='[>|<]' || true
    info "
Bij WIJZIGINGen voer uit:
    ${BLUE}gsettings set WIJZIGING${NORMAL}
    ${BLUE}...${NORMAL}"
    rm "$CONFIG_A" "$CONFIG_B"
}


function term_script {
    exit $SUCCESS
}


###############################################################################
# Main line                                                                   #
###############################################################################

function main {
    init_script "$@"
    check_input "$@"
    process_input
    term_script
}


main "$@"
