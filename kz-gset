#!/usr/bin/bash
# shellcheck source=kz-common.sh
###############################################################################
# GUI wijzigen.                                                               #
#                                                                             #
# Geschreven door Karel Zimmer <info@karelzimmer.nl>.                         #
###############################################################################

PROGRAM_PATH=$(realpath "$(dirname  "$0")")
source "$PROGRAM_PATH"/kz-common.sh
PROGRAM_NAME=kz-gset
DISPLAY_NAME=${PROGRAM_NAME/kz-/kz }
RELEASE_YEAR=2015


###############################################################################
# Global constants                                                            #
###############################################################################

readonly RUN_AS_SUPERUSER=false
readonly OPTIONS_SHORT=$OPTIONS_SHORT_COMMON
readonly OPTIONS_LONG=$OPTIONS_LONG_COMMON",addappfolder,addfavbegin,\
addfavend,,removeappfolder,removefav,file:,folder:"
readonly USAGE="Gebruik: $DISPLAY_NAME \
[--addappfolder|--removeappfolder --folder=APPFOLDER]
                 [--addfavbegin|--addfavend|--removefav --file=DESKTOPFILE]
                 $OPTIONS_USAGE_COMMON"
readonly HELP="Gebruik: $DISPLAY_NAME [OPTIE...]

GUI wijzigen.

Opties:
     --addappfolder
                voeg een appfolder toe
     --addfavbegin
                voeg een favoriet toe aan het begin van het favorietengebied
     --addfavend
                voeg een favoriet toe aan het einde van het favorietengebied
     --file=DESKTOPFILE
                opgegeven desktopbestand (.desktop) verwerken
     --folder=APPFOLDER
                opgegeven appfolder verwerken
     --removeappfolder
                verwijder een appfolder
     --removefav
                verwijder een favoriet uit het favorietengebied
$OPTIONS_HELP_COMMON"


###############################################################################
# Global variables                                                            #
###############################################################################

declare CONFIG_A=''
declare CONFIG_B=''
declare DESKTOPFILE=''
declare FILE_ARGUMENT=''
declare FOLDER_ARGUMENT=''
declare OPTION_ADDAPPFOLDER=false
declare OPTION_addfavend=false
declare OPTION_addfavbegin=false
declare OPTION_FILE=false
declare OPTION_FOLDER=false
declare OPTION_REMOVEAPPFOLDER=false
declare OPTION_REMOVEFAV=false


###############################################################################
# Functions                                                                   #
###############################################################################

check_input() {
    local   -i  getopt_rc=0
    local       parsed=''

    parsed=$(
        getopt  --alternative                       \
                --options       "$OPTIONS_SHORT"    \
                --longoptions   "$OPTIONS_LONG"     \
                --name          "$DISPLAY_NAME"     \
                --              "$@"
        )       || getopt_rc=$?
    if [[ $getopt_rc -ne $SUCCESS ]]; then
        printf '%s\n' "$USAGELINE" >&2
        exit $ERROR
    fi
    eval set -- "$parsed"
    process_common_options "$@"

    while true; do
        case $1 in
            --addappfolder)
                if $OPTION_ADDAPPFOLDER; then
                    TEXT="optie '$1' eenmaal opgeven"
                    printf  "$DISPLAY_NAME: %s\n%s\n"   \
                            "$TEXT"                     \
                            "$USAGELINE"                >&2
                    exit    $ERROR
                else
                    OPTION_ADDAPPFOLDER=true
                fi
                shift
                ;;
            --addfavbegin)
                if $OPTION_addfavbegin; then
                    TEXT="optie '$1' eenmaal opgeven"
                    printf  "$DISPLAY_NAME: %s\n%s\n"   \
                            "$TEXT"                     \
                            "$USAGELINE"                >&2
                    exit $ERROR
                elif ($OPTION_addfavend || $OPTION_REMOVEFAV); then
                    TEXT='een optie eenmaal opgeven'
                    printf  "$DISPLAY_NAME: %s\n%s\n"   \
                            "$TEXT"                     \
                            "$USAGELINE"                >&2
                    exit    $ERROR
                else
                    OPTION_addfavbegin=true
                fi
                shift
                ;;
            --addfavend)
                if $OPTION_addfavend; then
                    TEXT="optie '$1' eenmaal opgeven"
                    printf  "$DISPLAY_NAME: %s\n%s\n"   \
                            "$TEXT"                     \
                            "$USAGELINE"                >&2
                    exit $ERROR
                elif ($OPTION_addfavbegin || $OPTION_REMOVEFAV); then
                    TEXT='een optie eenmaal opgeven'
                    printf  "$DISPLAY_NAME: %s\n%s\n"   \
                            "$TEXT"                     \
                            "$USAGELINE"                >&2
                    exit    $ERROR
                else
                    OPTION_addfavend=true
                fi
                shift
                ;;
            --file)
                if $OPTION_FILE; then
                    TEXT="optie '$1' eenmaal opgeven"
                    printf  "$DISPLAY_NAME: %s\n%s\n"   \
                            "$TEXT"                     \
                            "$USAGELINE"                >&2
                    exit    $ERROR
                else
                    OPTION_FILE=true
                    FILE_ARGUMENT=$2
                fi
                shift 2
                ;;
            --folder)
                if $OPTION_FOLDER; then
                    TEXT="optie '$1' eenmaal opgeven"
                    printf  "$DISPLAY_NAME: %s\n%s\n"   \
                            "$TEXT"                     \
                            "$USAGELINE"                >&2
                    exit    $ERROR
                else
                    OPTION_FOLDER=true
                    FOLDER_ARGUMENT=$2
                fi
                shift 2
                ;;
            --removeappfolder)
                if $OPTION_REMOVEAPPFOLDER; then
                    TEXT="optie '$1' eenmaal opgeven"
                    printf  "$DISPLAY_NAME: %s\n%s\n"   \
                            "$TEXT"                     \
                            "$USAGELINE"                >&2
                    exit    $ERROR
                else
                    OPTION_REMOVEAPPFOLDER=true
                fi
                shift
                ;;
            --removefav)
                if $OPTION_REMOVEFAV; then
                    TEXT="optie '$1' eenmaal opgeven"
                    printf  "$DISPLAY_NAME: %s\n%s\n"   \
                            "$TEXT"                     \
                            "$USAGELINE"                >&2
                    exit    $ERROR
                elif ($OPTION_addfavbegin || $OPTION_addfavend); then
                    TEXT='een optie eenmaal opgeven'
                    printf  "$DISPLAY_NAME: %s\n%s\n"   \
                            "$TEXT"                     \
                            "$USAGELINE"                >&2
                    exit    $ERROR
                else
                    OPTION_REMOVEFAV=true
                fi
                shift
                ;;
            --)
                shift
                break
                ;;
            *)
                shift
                ;;
        esac
    done

    if [[ "$*" ]]; then
        TEXT='geen argumenten opgeven'
        printf "$DISPLAY_NAME: %s\n%s\n" "$TEXT" "$USAGELINE" >&2
        exit $ERROR
    fi

    if ($OPTION_addfavbegin || $OPTION_addfavend || $OPTION_REMOVEFAV) &&
        ! $OPTION_FILE; then
        TEXT="ontbrekende optie 'file'"
        printf "$DISPLAY_NAME: %s\n%s\n" "$TEXT" "$USAGELINE" >&2
        exit $ERROR
    elif $OPTION_FILE &&
        ! ($OPTION_addfavbegin || $OPTION_addfavend || $OPTION_REMOVEFAV)
        then
        TEXT="ontbrekende optie 'addfavbegin', 'addfavend', of 'removefav'"
        printf "$DISPLAY_NAME: %s\n%s\n" "$TEXT" "$USAGELINE" >&2
        exit $ERROR
    elif $OPTION_FILE && [[ $FILE_ARGUMENT != *.desktop ]]; then
        TEXT="bestandsnaam dient te eindigen met '.desktop'"
        printf "$DISPLAY_NAME: %s\n%s\n" "$TEXT" "$USAGELINE" >&2
        exit $ERROR
    fi
    DESKTOPFILE=$FILE_ARGUMENT

    if ($OPTION_ADDAPPFOLDER || $OPTION_REMOVEAPPFOLDER) && ! $OPTION_FOLDER
        then
        TEXT="ontbrekende optie 'folder'"
        printf "$DISPLAY_NAME: %s\n%s\n" "$TEXT" "$USAGELINE" >&2
        exit $ERROR
    elif $OPTION_FOLDER && ! ($OPTION_ADDAPPFOLDER || $OPTION_REMOVEAPPFOLDER)
        then
        TEXT="ontbrekende optie 'addappfolder'"
        printf "$DISPLAY_NAME: %s\n%s\n" "$TEXT" "$USAGELINE" >&2
        exit $ERROR
    fi
    APPFOLDER=$FOLDER_ARGUMENT

    # Een non-gui script gestart met optie gui.
    if $OPTION_GUI; then
        OPTION_GUI=false
        DESKTOP_TERMINAL=false
    fi

    check_user
}


process_input() {
    if $OPTION_addfavbegin; then
        process_option_addfavbegin
    elif $OPTION_addfavend; then
        process_option_addfavend
    elif $OPTION_REMOVEFAV; then
        process_option_removefav
    elif $OPTION_ADDAPPFOLDER; then
        process_option_addappfolder
    elif $OPTION_REMOVEAPPFOLDER; then
        process_option_removeappfolder
    else
        capture_gui_changes
    fi
}


process_option_addfavbegin () {
    local favorite_apps=''

    favorite_apps=$(gsettings get org.gnome.shell favorite-apps)
    if [[ $favorite_apps = '@as []' ]]; then
        gsettings set org.gnome.shell favorite-apps "['$DESKTOPFILE']"
    elif !  printf  '%s'                \
                    "$favorite_apps"    |
            grep    --quiet             \
                    --word-regexp       \
                    --regexp="$DESKTOPFILE"; then
        gsettings   set                                             \
                    org.gnome.shell                                 \
                    favorite-apps                                   \
                    "['$DESKTOPFILE', $(
                                        printf  '%s'                \
                                                "$favorite_apps"    |
                                        awk     -F'['               \
                                                '{print $2}'
                                        )"
    fi
}


process_option_addfavend () {
    local favorite_apps=''

    favorite_apps=$(gsettings get org.gnome.shell favorite-apps)
    if [[ $favorite_apps = '@as []' ]]; then
        gsettings set org.gnome.shell favorite-apps "['$DESKTOPFILE']"
    elif !  printf  '%s'                \
                    "$favorite_apps"    |
            grep    --quiet             \
                    --word-regexp       \
                    --regexp="$DESKTOPFILE"; then
        gsettings   set                             \
                    org.gnome.shell                 \
                    favorite-apps                   \
                    "$(
                        printf  '%s'                \
                                "$favorite_apps"    |
                        awk     -F']'               \
                                '{print $1}'), '$DESKTOPFILE']"
    fi
}


process_option_removefav () {
    local favorite_apps=''

    favorite_apps=$(gsettings get org.gnome.shell favorite-apps)
    if [[ $favorite_apps = '@as []' ]]; then
        :
    elif [[ $favorite_apps = "['$DESKTOPFILE']" ]]; then
        gsettings set org.gnome.shell favorite-apps "[]"
    else gsettings  set                                                 \
                    org.gnome.shell                                     \
                    favorite-apps                                       \
                    "$(
                        printf  '%s'                                    \
                                "$favorite_apps"                        |
                        sed     --expression="s/'$DESKTOPFILE', //g"    |
                        sed     --expression="s/, '$DESKTOPFILE'//"
                    )"
    fi
}


process_option_addappfolder () {
    local app_folders=''
    local schema=''
    local path=''

    app_folders=$(gsettings get org.gnome.desktop.app-folders folder-children)

    if [[ $app_folders = '@as []' ]]; then
        set org.gnome.desktop.app-folders folder-children "['$APPFOLDER']"
    elif !  printf  '%s'            \
                    "$app_folders"  |
            grep    --quiet         \
                    --word-regexp   \
                    --regexp="$APPFOLDER"; then
        gsettings   set                             \
                    org.gnome.desktop.app-folders   \
                    folder-children                 \
                    "$(
                        printf '%s' "$app_folders"  |
                        awk -F']' '{print $1}'), '$APPFOLDER']"
    fi
    schema=org.gnome.desktop.app-folders.folder
    path=/org/gnome/desktop/app-folders/folders/$APPFOLDER/
    gsettings set "$schema":"$path" name        "$APPFOLDER"
    gsettings set "$schema":"$path" translate   true
    gsettings set "$schema":"$path" categories  "['$APPFOLDER']"
}


process_option_removeappfolder () {
    local app_folders=''
    local schema=''
    local path=''

    app_folders=$(gsettings get org.gnome.desktop.app-folders folder-children)

    if [[ $app_folders = '@as []' ]]; then
        :
    elif [[ $app_folders = "['$APPFOLDER']" ]]; then
        gsettings set org.gnome.desktop.app-folders folder-children "[]"
    else gsettings  set                             \
                    org.gnome.desktop.app-folders   \
                    folder-children                 \
                    "$(
                        printf  '%s' "$app_folders" |
                        sed --expression="s/, '$APPFOLDER'//"
                    )"
    fi
    schema=org.gnome.desktop.app-folders.folder
    path=/org/gnome/desktop/app-folders/folders/$APPFOLDER/
    gsettings reset-recursively "$schema":"$path"
}


capture_gui_changes() {
    CONFIG_A=$(mktemp -t "$PROGRAM_NAME-A-XXXXXXXXXX.lst")
    save_configuration_database A "$CONFIG_A"
    info 'Voer nu de wijziging uit in de grafische werkomgeving.'
    read -rp 'Druk op de Enter-toets wanneer gereed [Enter]: '
    CONFIG_B=$(mktemp -t "$PROGRAM_NAME-B-XXXXXXXXXX.lst")
    save_configuration_database B "$CONFIG_B"
    report_database_changes "$CONFIG_A" "$CONFIG_B"
}


save_configuration_database() {
    local fase=${1:-fase?}
    local output_file=${2:-output_file?}


    gsettings list-recursively > "$output_file" 2> >($LOGCMD)

    sort    --unique                \
            --output="$output_file" \
            "$output_file"

    info "Inhoud configuratiedatabase vastgelegd ($fase)."
}


report_database_changes() {
    local output_file1=${1:-output_file1?}
    local output_file2=${2:-output_file2?}

    info '
WIJZIGINGen in de configuratiedatabase,
< is de oude   instelling (A),
> is de nieuwe instelling (B):'
    diff "$output_file1" "$output_file2" | grep --regexp='[>|<]' || true
    info "
Bij WIJZIGINGen voer uit:
    ${BLUE}gsettings set WIJZIGING${NORMAL}"
    rm "$CONFIG_A" "$CONFIG_B"
}


term_script() {
    exit $SUCCESS
}


###############################################################################
# Main line                                                                   #
###############################################################################

main() {
    init_script "$@"
    check_input "$@"
    process_input
    term_script
}


main "$@"
