#!/usr/bin/python3
"""
Systeem bijwerken.

Dit script voert een repair en update uit op Debian en op Debian gebaseerd
systeem zoals Ubuntu.
"""
###############################################################################
# Systeem bijwerken.
#
# Geschreven in 2021 door Karel Zimmer <info@karelzimmer.nl>, Creative Commons
# Publiek Domein Verklaring <http://creativecommons.org/publicdomain/zero/1.0>.
###############################################################################

import kz_common
import subprocess
import sys


###############################################################################
# Constants
###############################################################################

program_name = 'kz-update'
program_desc = 'Systeem bijwerken'
display_name = program_name.replace('kz-', 'kz ')


###############################################################################
# Variables
###############################################################################

command = ''


###############################################################################
# Functions
###############################################################################

def perform_repair():
    print('* REPAIR *')
    command = 'dpkg --configure --pending'
    perform_command(command)

    command = 'apt-get update --fix-missing'
    perform_command(command)

    command = 'apt-get install --fix-broken'
    perform_command(command)


def perform_update():
    print('* UPDATE *')
    command = 'apt-get update'
    perform_command(command)

    command = 'apt-get dist-upgrade --yes'
    perform_command(command)

    snap_refresh()


def perform_command(command):
    print(f'* Uitvoeren {command}...')
    kz_common.check_dpkgd_snapd()
    try:
        subprocess.run(f'sudo {command}', shell=True, check=True)
    except Exception as ex:
        print(ex)
        sys.exit(kz_common.err)
    else:
        print()


def snap_refresh():
    print('* Uitvoeren snap refresh...')
    kz_common.check_dpkgd_snapd()
    try:
        subprocess.run('sudo snap refresh', shell=True, check=True)
    except Exception as ex:
        print(ex)
    else:
        print()


def perform_cleanup():
    print('* CLEANUP *')
    command = 'apt-get autoclean --yes'
    perform_command(command)

    command = 'apt-get autoremove --yes'
    perform_command(command)

    snap_cleanup()


def snap_cleanup():
    # Start with LANG=en_US.UTF-8 and check for disabled does not always work.
    cmd = '\
snap list --all | \
while read name ver rev trk pub notes; do \
    if [[ $notes == *uitgeschakeld* || $notes == *disabled* ]]; then \
        sudo snap remove "$name" --revision="$rev"; \
    fi \
done'

    print('* Uitvoeren snap cleanup...')
    try:
        subprocess.run({cmd}, shell=True, check=True, executable='/bin/bash')
    except Exception as ex:
        print(ex)


def check_reboot():
    try:
        with open('/var/run/reboot-required') as fh:
            print('\n*** De computer moet herstarten om het installeren van '
                  'updates af te ronden ***')
    except FileNotFoundError:
        pass
    except Exception as ex:
        print(ex)
        sys.exit(kz_common.err)


###############################################################################
# Main
###############################################################################

kz_common.process_options(program_name, program_desc, display_name)

kz_common.check_on_ac_power(program_name)

kz_common.check_user_root(display_name)

perform_repair()

perform_update()

perform_cleanup()

check_reboot()
