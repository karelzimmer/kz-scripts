#!/bin/bash
# shellcheck source=kz_common.sh
###############################################################################
# Pakket installeren.
#
# Geschreven door Karel Zimmer <info@karelzimmer.nl>.
###############################################################################
PROGRAM_PATH=$(realpath "$(dirname  "$0")")
if [[ -e "$PROGRAM_PATH"/kz_common.sh ]]; then
    source "$PROGRAM_PATH"/kz_common.sh
else
    wget   --output-document=/tmp/kz_common.sh                     \
           https://karelzimmer.nl/data/linux/scripts/kz_common.sh  &> /dev/null
    source /tmp/kz_common.sh
fi
PROGRAM_NAME=kz_getdeb
DISPLAY_NAME=${PROGRAM_NAME/kz_/kz }
FIRST_RELEASED=2016

VERSION_NUMBER=29.00.01
VERSION_DATE=2021-08-22


###############################################################################
# Global constants
###############################################################################

readonly OPTIONS_SHORT=$OPTIONS_SHORT_COMMON
readonly OPTIONS_LONG=$OPTIONS_LONG_COMMON
readonly USAGE="Gebruik: $DISPLAY_NAME $OPTIONS_USAGE_COMMON
     of: wget karelzimmer.nl/kz
         bash kz
     of: wget karelzimmer.nl/kz; bash kz
     of: wget -O- karelzimmer.nl/kz | bash
     of: curl -L karelzimmer.nl/kz | bash"
readonly HELP="Gebruik: $DISPLAY_NAME [OPTIE...]
     of: wget karelzimmer.nl/kz
         bash kz
     of: wget karelzimmer.nl/kz; bash kz
     of: wget -O- karelzimmer.nl/kz | bash
     of: curl -L karelzimmer.nl/kz | bash

Pakket installeren.

Opties:
$OPTIONS_HELP_COMMON"

readonly    DEB_DIR=$HOME/kz_deb
readonly    DOCS_DIR=$HOME/kz_docs
readonly    SCRIPTS_DIR=$HOME/kz_scripts


###############################################################################
# Global variables
###############################################################################


###############################################################################
# Functions
###############################################################################

check_input() {
    local -i    getopt_rc=0
    local       parsed=''

    parsed=$(
        getopt  --alternative                       \
                --options       "$OPTIONS_SHORT"    \
                --longoptions   "$OPTIONS_LONG"     \
                --name          "$DISPLAY_NAME"     \
                --              "$@"
        )       || getopt_rc=$?
    if [[ $getopt_rc -ne $SUCCESS ]]; then
        printf '%s\n' "$USAGELINE" >&2
        exit $ERROR
    fi
    eval set -- "$parsed"
    process_general_options "$@"

    while true; do
        case $1 in
            --)
                shift
                break
                ;;
            *)
                shift
                ;;
        esac
    done

    if [[ "$*" ]]; then
        TEXT='geen argumenten opgeven'
        printf "$DISPLAY_NAME: %s\n%s\n" "$TEXT" "$USAGELINE" >&2
        exit $ERROR
    fi

    # Een non-gui script gestart met optie gui.
    if $OPTION_GUI; then
        OPTION_GUI=false
        TERMINAL=true
    fi

    # Een non-gui script gestart met optie gui.
    if $OPTION_GUI; then
        OPTION_GUI=false
        TERMINAL=true
    fi

    clear -x
    check_user
    check_on_ac_power
}


check_on_ac_power() {
    local -i on_battery=0

    on_ac_power >/dev/null 2>&1 || on_battery=$?
    if [[ $on_battery -eq 1 ]]; then
        TEXT='De computer gebruikt nu alleen de accu voor de stroomvoorziening.

Geadviseerd wordt om de computer aan te sluiten op het stopcontact.'
        whiptail    --backtitle "$DISPLAY_NAME" \
                    --title     'Waarschuwing'  \
                    --msgbox    "$TEXT"         \
                    10 71
    fi
}


check_sudo_and_dpkg() {
    check_sudo
    check_dpkg
}


check_sudo() {
    if ! sudo -n true 2> /dev/null; then
        while true; do
            TEXT='
Authenticatie is vereist voor het
installeren van pakket kz.

Voer uw wachtwoord in:'
            # Constructie '3>&1 1>&2 2>&3' om stdout en stderr te wisselen.
            if printf '%s\n' "$(
                whiptail    --backtitle     "$DISPLAY_NAME"         \
                            --title         'Authenticatie nodig'   \
                            --ok-button     'VerifiÃ«ren'            \
                            --cancel-button 'Annuleren'             \
                            --passwordbox   "$TEXT"                 \
                            12 37                                   \
                            3>&1 1>&2 2>&3
                )" | sudo --stdin true 2> /dev/null; then
                break
            else
                TEXT='Geen of verkeerd wachtwoord ingevoerd, of
Annuleren gekozen.'
                if ! whiptail   --backtitle     "$DISPLAY_NAME" \
                                --title         'Fout'          \
                                --yes-button    'Opnieuw'       \
                                --no-button     'Stoppen'       \
                                --yesno         "$TEXT"         \
                                10 45; then
                    TEXT='Programma is gestopt door de gebruiker'
                    TERM=ansi whiptail  --backtitle "$DISPLAY_NAME" \
                                        --title     'Gestopt'       \
                                        --infobox   "$TEXT"         \
                                        7 42
                    exit        $SUCCESS
                fi
            fi
        done
    fi
}


check_dpkg() {
    local -i wait_for_aptd=5

    if ls /snap/core/*/var/cache/debconf/config.dat &> /dev/null; then
        while sudo  fuser                                                   \
                    /var/{lib/{dpkg,apt/lists},cache/apt/archives}/lock*    \
                    /var/cache/debconf/config.dat                           \
                    /snap/core/*/var/cache/debconf/config.dat               \
                    &> /dev/null; do
            TEXT="Wacht tot andere pakketbeheerder klaar is (dit kan even \
duren)..."
            TERM=ansi whiptail  --backtitle "$DISPLAY_NAME" \
                                --title     'Voortgang'     \
                                --infobox   "$TEXT"         \
                                7 69
            sleep $wait_for_aptd
        done
    else
        while sudo  fuser                                                   \
                    /var/{lib/{dpkg,apt/lists},cache/apt/archives}/lock*    \
                    /var/cache/debconf/config.dat                           \
                    &> /dev/null; do
            TEXT="Wacht tot andere pakketbeheerder klaar is (dit kan even \
duren)..."
            TERM=ansi whiptail  --backtitle "$DISPLAY_NAME" \
                                --title     'Voortgang'     \
                                --infobox   "$TEXT"         \
                                7 69
            sleep $wait_for_aptd
        done
    fi
}


process_input() {
    local debian_full_name=''
    local karel_full_name=''
    local ubuntu_full_name=''

    install_scriptspackage

    # Ben ik een ontwikkelaar?
    debian_full_name=$(
        getent  passwd  user            |
        awk     -F:     '{print $5}'    |
        awk     -F,     '{print $1}'    || true
        )
    karel_full_name=$(
        getent  passwd  karel           |
        awk     -F:     '{print $5}'    |
        awk     -F,     '{print $1}'    || true
        )
    ubuntu_full_name=$(
        getent  passwd  ubuntu          |
        awk     -F:     '{print $5}'    |
        awk     -F,     '{print $1}'    || true
        )
    if [[   ($USER = user   && $debian_full_name = 'Debian Live user' ) ||
            ($USER = karel  && $karel_full_name  = 'Karel Zimmer'     ) ||
            ($USER = ubuntu && $ubuntu_full_name = 'Live session user') ]]
    then
        create_development_environment
    fi
}


install_scriptspackage() {
    local site_deb=https://karelzimmer.nl/apps/kz/kz_365_all.deb
    local temp_deb=''

    # Bij Live-sessie de universe repo aanzetten.
    if  [[ $HOSTNAME = 'ubuntu' && $USER = 'ubuntu' ]]; then
        check_sudo_and_dpkg
        TEXT='Voeg pakketbron toe...'
        TERM=ansi whiptail  --backtitle "$DISPLAY_NAME" \
                            --title     'Voortgang'     \
                            --infobox   "$TEXT"         \
                            7 26
        sudo add-apt-repository --yes universe  |& $LOGCMD

        check_sudo_and_dpkg
        TEXT='Ververs pakketlijst'
        TERM=ansi whiptail  --backtitle "$DISPLAY_NAME" \
                            --title     'Voortgang'     \
                            --infobox   "$TEXT"         \
                            7 23
        sudo apt-get update |& $LOGCMD
    fi

    # Installeer scriptspakket.
    check_sudo_and_dpkg
    TEXT='Download scriptspakket...'
    TERM=ansi whiptail  --backtitle "$DISPLAY_NAME" \
                        --title     'Voortgang'     \
                        --infobox   "$TEXT"         \
                        7 29

    temp_deb=$(mktemp -t "${PROGRAM_NAME}_XXXXXXXXXX.deb")
    wget --output-document="$temp_deb" $site_deb |& $LOGCMD

    check_sudo_and_dpkg
    TEXT='Installeer scriptspakket (dit kan even duren)...'
    TERM=ansi whiptail  --backtitle "$DISPLAY_NAME" \
                        --title     'Voortgang'     \
                        --infobox   "$TEXT"         \
                        7 52

    check_sudo_and_dpkg
    sudo    DEBIAN_FRONTEND=noninteractive  \
            apt-get                         \
            install                         \
            --yes                           \
            --reinstall                     \
            "$temp_deb"                     |& $LOGCMD
    rm "$temp_deb" |& $LOGCMD
}


create_development_environment() {
    TEXT='Maak ontwikkelomgeving...'
    TERM=ansi whiptail  --backtitle "$DISPLAY_NAME" \
                        --title     'Voortgang'     \
                        --infobox   "$TEXT"         \
                        7 29
    check_dependencies
    process_deb
    process_documents
    process_scripts
    download_website
}


check_dependencies() {
    if ! command -v git 1> /dev/null; then
        sudo apt-get install --yes git |& $LOGCMD
    fi
    if ! command -v lftp 1> /dev/null; then
        sudo apt-get install --yes lftp |& $LOGCMD
    fi
}


process_deb() {
    if ! git    clone                                       \
                https://github.com/karelzimmer/kz_deb.git   \
                "$DEB_DIR"                                  |& $LOGCMD
    then
        cd "$DEB_DIR" || exit $ERROR
        git config credential.helper store |& $LOGCMD
        git pull |& $LOGCMD
    fi
}


process_documents() {
    if ! git    clone                                       \
                https://github.com/karelzimmer/kz_docs.git  \
                "$DOCS_DIR"                                 |& $LOGCMD
    then
        cd "$DOCS_DIR" || exit $ERROR
        git config credential.helper store |& $LOGCMD
        git pull |& $LOGCMD
    fi
}


process_scripts() {
    if ! git    clone                                           \
                https://github.com/karelzimmer/kz_scripts.git   \
                "$SCRIPTS_DIR"                                  |& $LOGCMD
    then
        cd "$SCRIPTS_DIR" || exit $ERROR
        git config credential.helper store |& $LOGCMD
        git pull |& $LOGCMD
    fi
}


download_website() {
    local ftp_set='set ssl:verify-certificate no'
    local ftp_from=/httpdocs
    local ftp_to=$HOME/uploads/karelzimmer.nl/httpdocs
    local ftp_opts='--delete --verbose'
    local ftp_cmd="mirror $ftp_opts $ftp_from $ftp_to; exit"
    local ftp_host=server106.hosting2go.nl
    local ftp_user=kzimmer
    local ftp_login=$HOME/.kz_$ftp_host

    if ! [[ -f $ftp_login ]]; then
        # < /dev/tty want FD 1 al in gebruik bij 'wget -O- karelzim... | bash'.
        read -rsp "FTP-wachtwoord voor $ftp_host: " < /dev/tty
        printf '%s\n' "$REPLY" > "$ftp_login"
        printf '\n'
        chmod 'u=rw,g=,o=' "$ftp_login" |& $LOGCMD
    fi
    TEXT='Download website (dit kan even duren)...'
    TERM=ansi whiptail  --backtitle "$DISPLAY_NAME" \
                        --title     'Voortgang'     \
                        --infobox   "$TEXT"         \
                        7 44
    if ! lftp   --user "$ftp_user"                  \
                --password "$(cat "$ftp_login")"    \
                -e "$ftp_set; $ftp_cmd"             \
                "$ftp_host"                         |& $LOGCMD; then
        rm      "$ftp_login"
        printf  "${YELLOW}%s${NORMAL}\n"            \
                'Downloaden website is mislukt.'    >&2
        printf  "${YELLOW}%S${NORMAL}\n" "Controleer de log...!" >&2
        return  $WARNING
    fi
}


term_script() {
    TEXT='Volg nu de stappen zoals beschreven in Checklist installatie.

Deze Checklist is te vinden op de site https://karelzimmer.nl
onder Linux, en in map /usr/share/doc/kz.'
    height=10

    if ! $TERMINAL; then
        TEXT=$TEXT"

Typ 'exit' om dit venster te sluiten."
        height=12
    fi
    TERM=ansi whiptail  --backtitle "$DISPLAY_NAME" \
                        --title 'Gereed'            \
                        --infobox "$TEXT"           \
                        $height 65
    exit $SUCCESS
}


###############################################################################
# Main line
###############################################################################

main() {
    init_script
    check_input "$@"
    process_input
    term_script
}


main "$@"


# EOF
