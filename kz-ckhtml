#!/usr/bin/bash
# shellcheck source=kz-common.sh
###############################################################################
# Webbestanden valideren.                                                     #
#                                                                             #
# Geschreven door Karel Zimmer <info@karelzimmer.nl>.                         #
###############################################################################

PROGRAM_PATH=$(realpath "$(dirname  "$0")")
source "$PROGRAM_PATH"/kz-common.sh
PROGRAM_NAME=kz-ckhtml
DISPLAY_NAME=${PROGRAM_NAME/kz-/kz }
RELEASE_YEAR=2012


###############################################################################
# Global constants                                                            #
###############################################################################

readonly OPTIONS_SHORT=$OPTIONS_SHORT_COMMON
readonly OPTIONS_LONG=$OPTIONS_LONG_COMMON
readonly USAGE="Gebruik: $DISPLAY_NAME $OPTIONS_USAGE_COMMON"
readonly HELP="Gebruik: $DISPLAY_NAME [OPTIE...]

Webbestanden valideren.

Opties:
$OPTIONS_HELP_COMMON"

readonly CSS_DIR=$HOME/kz-uploads/dist/css
readonly HTML_DIR=$HOME/kz-uploads/dist/html

readonly HOME_URL=https://karelzimmer.nl
readonly CSS_URL=$HOME_URL/css
readonly HTML_URL=$HOME_URL/html

readonly CSS_VALIDATOR_URL='http://jigsaw.w3.org/css-validator/validator?uri='
readonly HTML_VALIDATOR_URL='http://validator.w3.org/check?uri='


###############################################################################
# Global variables                                                            #
###############################################################################


###############################################################################
# Functions                                                                   #
###############################################################################

function check_input {
    local -i    getopt_rc=0
    local       parsed=''

    parsed=$(
        getopt  --alternative                       \
                --options       "$OPTIONS_SHORT"    \
                --longoptions   "$OPTIONS_LONG"     \
                --name          "$DISPLAY_NAME"     \
                --              "$@"
        )       || getopt_rc=$?
    if [[ $getopt_rc -ne $SUCCESS ]]; then
        printf '%s\n' "$USAGELINE" >&2
        exit $ERROR
    fi
    eval set -- "$parsed"
    process_common_options "$@"

    while true; do
        case $1 in
            --)
                shift
                break
                ;;
            *)
                shift
                ;;
        esac
    done

    if [[ "$*" ]]; then
        printf '%s\n%s\n' 'Teveel argumenten.' "$USAGELINE" >&2
        exit $ERROR
    fi

    check_user
}


function process_input {
    local dir=''

    for dir in "$CSS_DIR" "$HTML_DIR"; do
        if ! [[ -d $dir ]]; then
            printf '%s\n' "Map '$dir' bestaat niet." >&2
            exit $ERROR
        fi
    done

    if ! pgrep 'chrome' &> /dev/null; then
        printf '%s\n' 'Google Chrome webrowser is nog niet gestart,
start nu eerst de Google Chrome webrowser.'
        read -rp "Druk op Enter-toets wanneer Google Chrome webrowser is \
gestart [Enter]: "
        if ! pgrep 'chrome' &> /dev/null; then
            printf '%s\n' 'Google Chrome webrowser is niet gestart.' >&2
            exit $ERROR
        fi
    fi

    validate_css
    validate_html
}


function validate_css {
    local filename=''

    cd "$CSS_DIR" || exit $ERROR

    for filename in *.css; do
        google-chrome "$CSS_VALIDATOR_URL$CSS_URL/$filename" |& $LOGCMD
    done
}


function validate_html {
    local filename=''

    cd "$HTML_DIR" || exit $ERROR

    for filename in *.html; do
        google-chrome "$HTML_VALIDATOR_URL$HTML_URL/$filename" |& $LOGCMD
    done
}


function term_script {
    printf '%s\n' 'Controleer de tabbladen in Google Chrome.'
    exit $SUCCESS
}


###############################################################################
# Main line                                                                   #
###############################################################################

function main {
    init_script "$@"
    check_input "$@"
    process_input
    term_script
}


main "$@"
