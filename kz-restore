#!/usr/bin/bash
# shellcheck source=kz-common.sh
###############################################################################
# Back-up terugzetten.                                                        #
#                                                                             #
# Geschreven door Karel Zimmer <info@karelzimmer.nl>.                         #
###############################################################################

PROGRAM_PATH=$(realpath "$(dirname  "$0")")
source "$PROGRAM_PATH"/kz-common.sh
PROGRAM_NAME=kz-restore
DISPLAY_NAME=${PROGRAM_NAME/kz-/kz }
RELEASE_YEAR=2007


###############################################################################
# Global constants                                                            #
###############################################################################

readonly OPTIONS_SHORT=$OPTIONS_SHORT_COMMON'gn'
readonly OPTIONS_LONG=$OPTIONS_LONG_COMMON',gui,dry-run'
readonly USAGE="Gebruik: $DISPLAY_NAME [-g|--gui] [-n|--dry-run]
                    $OPTIONS_USAGE_COMMON"
readonly HELP="Gebruik: $DISPLAY_NAME [OPTIE...]

Back-up terugzetten.

Opties:
  -g, --gui      start in grafische modus
  -n, --dry-run  een proefrun uitvoeren zonder wijzigingen aan te brengen
$OPTIONS_HELP_COMMON"

SOURCE=$(ls --directory /media/"$USER"/*/backup-"$HOSTNAME-$USER" 2> /dev/null)
readonly SOURCE
TARGET=$HOME


###############################################################################
# Global variables                                                            #
###############################################################################

OPTION_DRY_RUN=''
OPTION_GUI=false


###############################################################################
# Functions                                                                   #
###############################################################################

function check_input {
    local -i    getopt_rc=0
    local       parsed=''

    parsed=$(
        getopt  --alternative                       \
                --options       "$OPTIONS_SHORT"    \
                --longoptions   "$OPTIONS_LONG"     \
                --name          "$DISPLAY_NAME"     \
                --              "$@"
        )       || getopt_rc=$?
    if [[ $getopt_rc -ne $SUCCESS ]]; then
        error "$USAGELINE"
        exit $ERROR
    fi
    eval set -- "$parsed"
    process_common_options "$@"

    while true; do
        case $1 in
            -g|--gui)
                OPTION_GUI=true
                reset_terminal_attribs
                shift
                ;;
            -n|--dry-run)
                OPTION_DRY_RUN='--dry-run'
                shift
                ;;
            --)
                shift
                break
                ;;
            *)
                shift
                ;;
        esac
    done

    if [[ "$*" ]]; then
        error "Te veel argumenten.
$USAGELINE"
        exit $ERROR
    fi

    check_user
}


function process_input {

    if [[ -z $SOURCE ]]; then
        warning "Koppel een back-up-medium aan met map \
'backup-$HOSTNAME-$USER', en start daarna opnieuw."
        exit $WARNING
    elif [[ $(printf '%s\n' "$SOURCE" | wc --lines) -gt 1 ]]; then
        warning "Koppel slechts één back-up-medium aan met map \
'backup-$HOSTNAME-$USER'.

Nu aangekoppeld zijn:
$SOURCE

Koppel media af via Bestanden, en start daarna opnieuw."
        exit $WARNING
    fi

    check_on_ac_power
    restore_backup
}


function restore_backup {
    local -i    rsync_rc=0

    TITLE='Back-up terugzetten'
    TEXT="Restore voorbereiden..."
    if $OPTION_GUI; then
        rsync   --archive                   \
                --verbose                   \
                "$SOURCE"/                  \
                "$TARGET"                   \
                2> >($LOGCMD)               |
        awk     '{print "#"$0}'             |
        zenity  --progress                  \
                --auto-close                \
                --no-cancel                 \
                --pulsate                   \
                --width 600                 \
                --height 50                 \
                --title "$TITLE"            \
                --text "$TEXT"              2> >($LOGCMD) || rsync_rc=$?
    else
        rsync   --archive                   \
                --verbose                   \
                --human-readable            \
                $OPTION_DRY_RUN             \
                "$SOURCE"/                  \
                "$TARGET"                   2> >($LOGCMD) || rsync_rc=$?
    fi

    case $rsync_rc in
        0)
            return $SUCCESS
            ;;
        11)
            log 'Te weinig ruimte.'
            error "
Back-up terugzetten is mislukt.

Te weinig ruimte op $(df "$TARGET" | awk 'END{print $6}').

Gebruik een medium met meer ruimte, en start daarna opnieuw."
            exit $ERROR
            ;;
        23)
            log 'Niet alle bestanden waren leesbaar?'
            warning "
Back-up terugzetten is gedeeltelijk gelukt.

Mogelijk zijn enkele bestanden niet leesbaar.

Controleer de log in het Terminalvenster met:
    ${BOLD}$LOGCMD_CHECK${NORMAL}"
            exit $WARNING
            ;;
        *)
            error "
Back-up terugzetten is mislukt.

Foutcode rsync is $rsync_rc.

Controleer de log in het Terminalvenster met:
    ${BOLD}$LOGCMD_CHECK${NORMAL}"
            exit $ERROR
            ;;
    esac
}


function term_script {
    info "
De back-up is teruggezet.${BOLD}$OPTION_DRY_RUN${NORMAL}

Koppel zelf (veilig!) het back-up-medium af."
    exit $SUCCESS
}


###############################################################################
# Main line                                                                   #
###############################################################################

function main {
    init_script "$@"
    check_input "$@"
    process_input
    term_script
}


main "$@"
