#!/bin/bash
# shellcheck source=kz_common.sh
###############################################################################
# Back-up terugzetten.
#
# Geschreven in 2007 door Karel Zimmer <info@karelzimmer.nl>, Creative Commons
# Publiek Domein Verklaring <http://creativecommons.org/publicdomain/zero/1.0>.
###############################################################################


###############################################################################
# Constants
###############################################################################

readonly program_name='kz-restore'
readonly program_desc='Back-up terugzetten'
readonly display_name=${program_name/kz-/kz }

# Redhat reports $0 as '-bash', dirname "$0" -> dirname: invalid option -- 'b'.
program_path=$(realpath "$(dirname  "${0/#-/}")")
readonly program_path
source  "$program_path"/kz_common.sh

readonly options_short+='gs:'
readonly options_long+=',dry-run,gui,source:'
readonly usage="Gebruik: $display_name [--dry-run] [-g|--gui] \
[-s|--source=BRONMAP]
                    $options_usage"
readonly help="Gebruik: $display_name [OPTIE...]

$program_desc.

Opties:
      --dry-run  een proefrun uitvoeren zonder wijzigingen aan te brengen
  -g, --gui      start in grafische modus
  -s, --source=BRONMAP
                 gebruik back-up in de BRONMAP
$options_help"

target=$HOME


###############################################################################
# Variables
###############################################################################

declare medium=''
declare option_dry_run=''
declare option_gui=false
declare option_source=false
declare source_argument=''
declare source_medium=''
declare source=''
declare text=''
declare title=''


###############################################################################
# Functions
###############################################################################

function check_input {
    local -i    getopt_rc=0
    local       parsed=''

    parsed=$(
        getopt  --alternative                       \
                --options       "$options_short"    \
                --longoptions   "$options_long"     \
                --name          "$display_name"     \
                --              "$@"
        ) || getopt_rc=$?
    if [[ $getopt_rc -ne $ok ]]; then
        info "$usageline"
        exit $err
    fi
    eval set -- "$parsed"
    kz_common.process_options "$@"

    while true; do
        case $1 in
            -g|--gui)
                option_gui=true
                kz_common.reset_terminal_attributes
                shift
                ;;
            --dry-run)
                option_dry_run='--dry-run'
                shift
                ;;
            -s|--source)
                option_source=true
                source_argument=$2
                shift 2
                ;;
            --)
                shift
                break
                ;;
            *)
                shift
                ;;
        esac
    done

    if [[ "$*" ]]; then
        info 'Geen argumenten toegestaan.'
        info "$usageline"
        exit $err
    fi
}


function process_input {
    local prompt=''
    local restore=false

    if $option_source; then
        if ! [[ -d $source_argument ]]; then
            info "Map $source_argument bestaat niet."
            info "$usageline"
            exit $err
        fi
        source=$source_argument/backup-$HOSTNAME-$USER
        source_medium=$source_argument
    else
        medium=$(ls --directory /media/"$USER"/* 2> /dev/null || true)
        if [[ -z $medium ]]; then
            text='
Zorg dat het USB-medium is aangekoppeld waarop de back-up staat.'
            warn "$text"
            kz_common.wait_for_enter
            medium=$(ls --directory /media/"$USER"/* 2> /dev/null || true)
            if [[ -z $medium ]]; then
                err 'Geen USB-medium gevonden.

Koppel een USB-medium aan, en start daarna restore opnieuw.'
            exit $err
            fi
        fi
        if [[ $(printf '%s\n' "$medium" | wc --lines) -gt 1 ]]; then
            err "Koppel slechts één USB-medium aan.

Nu aangekoppeld zijn:
$medium

Koppel media af via Bestanden, en start daarna restore opnieuw."
            exit $err
        fi
        source=$medium/backup-$HOSTNAME-$USER
        source_medium=$medium
        if ! [[ -d $source ]]; then
            err "Geen back-up gevonden op aangekoppeld USB-medium.

Koppel een USB-medium aan met hierop de map backup-$HOSTNAME-$USER, en start \
daarna restore opnieuw."
            exit $err
        fi
    fi

    kz_common.check_on_ac_power

    title='Back-up terugzetten'
    text='Back-up wordt TERUGGEZET.
'
    prompt='Doorgaan?'
    if $option_gui; then
        text+="
$prompt"
        if zenity   --question                  \
                    --no-markup                 \
                    --width         600         \
                    --height        50          \
                    --title         "$title"    \
                    --text          "$text"     \
                    --ok-label      'Ja'        \
                    --cancel-label  'Nee'       2> >($logcmd); then
            restore=true
        else
            restore=false
        fi
    else
        info "$text"
        while true; do
            read -rp "$prompt [j/N]: "
            case $REPLY in
                j*|J*)
                    restore=true
                    break
                    ;;
                n*|N*|'')
                    restore=false
                    break
                    ;;
                *)
                    printf '%s' "${rewrite_line}"
                    continue
                    ;;
            esac
        done
    fi
    if $restore; then
        restore_backup

        title='Instellingen terugzetten'
        text='Instellingen terugzetten'
        if $option_gui; then
            restore_settings                |
            zenity  --progress              \
                    --pulsate               \
                    --auto-close            \
                    --no-cancel             \
                    --width     600         \
                    --height    50          \
                    --title     "$title"    \
                    --text      "$text"     2> >($logcmd)
        else
            info "$text..."
            restore_settings
        fi
    else
        exit $ok
    fi
}


function restore_backup {
    local -i rsync_rc=0

    text='Restore voorbereiden (dit kan even duren)'
    if $option_gui; then
        rsync   --archive                   \
                --verbose                   \
                "$source"/                  \
                "$target"/                  \
                2> >($logcmd)               |
        sed     --expression='s/^/#/'       |
        zenity  --progress                  \
                --auto-close                \
                --no-cancel                 \
                --pulsate                   \
                --width     600             \
                --height    50              \
                --title     "$title"        \
                --text      "$text"         2> >($logcmd) || rsync_rc=$?
    else
        info "$text..."
        rsync   --archive                   \
                --verbose                   \
                --human-readable            \
                $option_dry_run             \
                "$source"/                  \
                "$target"/                  2> >($logcmd) || rsync_rc=$?
    fi

    case $rsync_rc in
        0)
            return $ok
            ;;
        *)
            err "Back-up terugzetten is geëindigd met fouten.

Mogelijk zijn enkele bestanden niet leesbaar, of zijn er bestanden verwijderd
of toegevoegd tijdens het terugzetten van de back-up, of is er te weinig
ruimte op $target."
            exit $err
            ;;
    esac
}


function restore_settings {
    local tgtdir=$HOME/Instellingen

    restore_settings_desktop_background
    restore_settings_favorite_apps

    # Old folder, lagacy.
    rm --force --recursive "$HOME"/kz-data/
}


function restore_settings_desktop_background {
    local file=$tgtdir/Achtergrond

    if [[ -f $file ]]; then
        gsettings set org.gnome.desktop.background picture-uri "file://$file"
    fi
}


function restore_settings_favorite_apps {
    local file=$tgtdir/Favorieten

    if [[ -f $file ]]; then
        gsettings set org.gnome.shell favorite-apps "$(cat "$file")"
    fi
}


function term_script {
    local       dev=''
    local   -i  rc=0

    sync |& $logcmd || rc+=$?
    text=''
    if [[ $source_medium == /media/* ]]; then
        text='Het USB-medium afkoppelen'
        dev='/dev/'$(
            lsblk   --ascii             |
            grep    --before-context=1  \
                    "$source_medium"    |
            head    -1                  |
            cut     --delimiter='-'     \
                    --fields=2          |
            cut     --delimiter=' '     \
                    --fields=1
        )
        if $option_gui; then
            umount "$source_medium";                    \
            udisksctl lock --block-device "$dev";       \
            udisksctl power-off --block-device "$dev"   |
            zenity  --progress                          \
                    --pulsate                           \
                    --auto-close                        \
                    --no-cancel                         \
                    --width     600                     \
                    --height    50                      \
                    --title     "$title"                \
                    --text      "$text"                 2> >($logcmd) || rc+=$?
        else
            info "$text..."
            umount "$source_medium" |& $logcmd || rc+=$?
            udisksctl lock --block-device "$dev" |& $logcmd || rc+=$?
            udisksctl power-off --block-device "$dev" |& $logcmd || rc+=$?
        fi
        if [[ $rc -eq $ok ]]; then
            info "
De back-up is teruggezet.

Het USB-medium kan verwijderd worden."
        else
            warn "
De back-up is teruggezet.

Koppel zelf (veilig!) het USB-medium af."
        fi
    fi
    exit $ok
}


###############################################################################
# Script
###############################################################################

function main {
    kz_common.init_script "$@"
    check_input "$@"
    process_input
    term_script
}

main "$@"
