.\"############################################################################
.\"# SPDX-FileComment: Man page for kz
.\"#
.\"# SPDX-FileCopyrightText: Karel Zimmer <info@karelzimmer.nl>
.\"# SPDX-License-Identifier: CC0-1.0
.\"############################################################################

.TH "KZ" "1" "4.2.1" "kz" "User commands"

.SH NAME
kz - Run the kz command

.SH SYNOPSIS
.SY kz
\fI<command>\fR [\fI<arguments>\fR] [<options>]
.YS

.SH DESCRIPTION
\fBkz\fR runs \fI<command>\fR, installed by package kz, possibly with the
specified \fI<arguments>\fR.
.sp
Package kz contains scripts for installing and managing Debian and Debian-based
systems such as Ubuntu, and Red Hat-based systems such as AlmaLinux and Rocky
Linux.
.sp
Package kz is tested on Debian, Ubuntu——including flavors such as Kubuntu,
Lubuntu, and Xubuntu——, and AlmaLinux and Rocky Linux.
.sp
Use option \fB-l\fR, \fB--list\fR for a list of available commands.

.SH OPTIONS
.TP
\fI<command>\fR
Execute the specified kz command.
.TP
\fI<arguments>\fR
Any arguments relating to the command.
.TP
\fB-l\fR, \fB--list\fR
Show the available commands.
.TP
\fB-h\fR, \fB--help\fR
Show a short description of the available options.
.TP
\fB-m\fR, \fB--manual\fR
Show the manual page.
.TP
\fB-u\fR, \fB--usage\fR
Show the available options.
.TP
\fB-v\fR, \fB--version\fR
Show the version, author, and copyright.
.SH EXIT STATUS
Normally exit value 0 is returned; if an error occurs, the exit value is not
equal to 0.

.SH NOTES
.sp
\fBkz\fR's commands are divided into high-level commands ("porcelain") and
low-level commands ("plumbing").
.sp
.SS High-level commands (porcelain)
.br
These commands can be executed in a desktop environment with the Install menu
or by searching for the command, and in the Terminal window.
.TP
\fBkz-backup\fR(1)
Backup home folder.
.TP
\fBkz-install\fR(1)
Install apps.
.TP
\fBkz-menu\fR(1)
Installation menu.
.TP
\fBkz-restore\fR(1)
Restore home folder.
.TP
\fBkz-setup\fR(1)
Set up apps.
.TP
\fBkz-wifi\fR(1)
Show WiFi information.
.sp
.SS Low-level commands (plumbing)
.br
These commands can only be run in the Terminal window and are supporting the
management and use of kz and Linux.
.TP
\fBkz-build\fR(1)
Build website including kz packages.
.TP
\fBkz-check\fR(1)
Check scripts and website.
.TP
\fBkz-deploy\fR(1)
Distribute website including kz packages.
.TP
\fBkz-desktop\fR(1)
Change desktop environment.
.TP
\fBkz-dev\fR(1)
Build development environment.
.TP
\fBkz-get\fR(1)
Download and install Debian or RPM package kz.
.TP
\fBkz-update\fR(1)
Update and cleanup system.
.TP
\fBgitclone\fR
Git clone of all public remote repos in the home directory.
.TP
\fBgitpull\fR
Git pull (or git clone) of all public remote repos in the home directory.
.TP
\fBgitstatus\fR
Git status of all local branches in the home directory.
.TP
\fBrchecklink\fR
Reverse checklink.
.SS Modern
Package \fBkz\fR implements and with the documents and scripts supports for:
.br
\fB1. IaC\fR
.br
\fB2. CI/CD\fR
.br
\fB3. Day 0/Day 1/Day 2 Operations\fR
.br
Concepts from the modern world of software development, distribution, and
management.
.sp
\fB1. IaC\fR (Infrastructure as Code)
.br
Defining and managing infrastructure through code.
.br
The commands that come with package kz are idempotent; repeated execution
always leads to the same result.
.br
Repeatability (idempotency) is one of the principles of IaC.
.br
The documents and scripts are recorded and maintained in version control
(GitHub), another principle of IaC.
.br
Examples are \fBkz-install.sh\fR (install file used by \fBkz install\fR) and
\fBkz-setup.sh\fR (setup file used by \fBkz setup\fR).
.sp
\fB2. CI/CD\fR (Continuous Integration and Delivery)
.br
CI/CD is the combined practice of continuous integration (CI) and (more
commonly) continuous delivery or (less commonly) continuous deployment (CD).
.br
CI (Continuous Integration) is the process of merging all developers' working
copies into a shared main line several times a day.
.br
CD (Continuous Delivery) is producing software in short cycles, ensuring that
the software can be released reliably at any time and, when releasing the
software, without doing it manually.
.br
CD (Continuous Deployment) is an approach where software functionality is
delivered frequently and through automated deployments.
.br
A \fBCI/CD Pipeline\fR is a series of steps that must be performed to
automatically deliver a new software version.
.br
Examples are \fBkz build\fR and \fBkz deploy\fR.
.sp
\fBCI/CD Pipeline flow\fR
.br
Code -----> SCM ----->  Build -----> Test ----->  Check -----> Deploy--+
.sp
.sp
vscode      GitHub      kz-build     CLI/TUI/GUI  kz-check     kz-deploy
.sp
.sp
+------- DEV --------+  +-------- TEST --------+  +------- PROD -------+
.sp
SCM stands for Source Code Management.
.sp
\fB3. Day 0/Day 1/Day 2 Operations\fR
.br
In IT, the terms Day 0/Day 1/Day 2 Operations refer to different phases of
software development, distribution, and management.
.sp
\fB3.1 Day 0 Operations\fR
.br
This is the design phase, where project requirements are specified and the
architecture of the solution is determined.
.br
Package kz is developed with Visual Studio Code and GitHub, and programmed in
Bash and Python.
.br
Examples are Google Keep (capture ideas and ticket system) and \fBkz dev\fR.
.sp
\fB3.2 Day 1 Operations\fR
.br
Includes development and deploy of software designed in the day 0 phase.
.br
This includes using \fBIaC\fR and \fBCI/CD Pipelines\fR, and executing Ansible
Playbooks.
.br
Examples are Checklist installation, and \fBkz get\fR and \fBkz menu\fR.
.sp
\fB3.3 Day 2 Operations\fR
.br
Here, most attention is paid to maintaining, monitoring, and optimizing the
system.
.br
Examples are \fBkz backup\fR and \fBkz update\fR.

.SH EXAMPLES
.EX
\fBkz update\fR
.RS
Update and cleanup system.
.RE
.sp
\fBkz install google-chrome\fR
.RS
Install Google Chrome.
.RE
.sp
\fBkz setup --cat google-chrome\fR
.RS
Show set up commands for Google Chrome.
.RE
.EE

.SH SEE ALSO
.UR https://karelzimmer.nl/nl/en
.UE
