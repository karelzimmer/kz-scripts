#!/usr/bin/bash
# shellcheck source=kz_common.sh disable=SC2155
###############################################################################
# SPDX-FileComment: Run command
#
# SPDX-FileCopyrightText: Karel Zimmer <info@karelzimmer.nl>
# SPDX-License-Identifier: CC0-1.0
###############################################################################


###############################################################################
# Import
###############################################################################

source "$(dirname "$0")"/kz_common.sh


###############################################################################
# Constants
###############################################################################

readonly PROGRAM_NAME='kz'
readonly PROGRAM_DESC=$(gettext 'Run command')
readonly DISPLAY_NAME=${PROGRAM_NAME/kz-/kz }

readonly USAGE=$(eval_gettext "Usage: \$DISPLAY_NAME [-l|--list] \$OPTIONS_USA\
GE
          COMMAND [ARGUMENT...]")

readonly X_OPTIONS_HELP=$(gettext '  -l, --list     show available COMMANDs')

readonly HELP="$(eval_gettext "Usage: \$DISPLAY_NAME [OPTION...] COMMAND [ARGU\
MENT...]")

$PROGRAM_DESC.

$(gettext 'Options:')
$X_OPTIONS_HELP
$OPTIONS_HELP

$(gettext 'Arguments:')
$(gettext '  COMMAND        execute COMMAND')
$(gettext '  ARGUMENT       ARGUMENTs for COMMAND')"

readonly X_OPTIONS_SHORT='l'
readonly X_OPTIONS_LONG=',list'

readonly PROGRAM_PATH=$MODULE_PATH


###############################################################################
# Variables
###############################################################################


###############################################################################
# Functions
###############################################################################

# This function handles the script options and arguments.
function check_input {
    local       parsed=''
    local   -i  parsed_rc=0

    if [[ -z $* ]]; then
        infomsg "$USAGE_LINE"
        exit $ERROR
    fi

    if [[ $1 == -* ]]; then
        parsed=$(
            getopt  --alternative                                       \
                    --options       "$OPTIONS_SHORT$X_OPTIONS_SHORT"    \
                    --longoptions   "$OPTIONS_LONG$X_OPTIONS_LONG"      \
                    --name          "$DISPLAY_NAME"                     \
                    --              "$@"
            ) || parsed_rc=$?
        if [[ $parsed_rc -ne $OK ]]; then
            infomsg "$USAGE_LINE"
            exit $ERROR
        fi
        eval set -- "$parsed"

        process_common_options "$@"

        while true; do
            case $1 in
                -l|--list)
                    process_option_list
                    exit $OK
                    ;;
                --)
                    shift
                    break
                    ;;
                *)
                    shift
                    ;;
            esac
        done
    fi
}


# This function displays all available commands.
function process_option_list {
    text="$(gettext 'The following COMMANDs are available:')

$(gettext 'NUM  COMMAND')\n"
    text+=$(
        find    "$PROGRAM_PATH"/$PROGRAM_NAME-*     \
                -maxdepth 1                         \
                -type f                             \
                -executable                         \
                -readable                           \
                -not -name '*~'                     \
                -not -name $PROGRAM_NAME            \
                -printf '%f\n'                      |
        sort                                        |
        sed     --expression="s/$PROGRAM_NAME-//"   |
        nl      --number-width=3                    \
                --number-format=rn                  \
                --number-separator='  '             \
                --body-numbering=a
        )
    text+="\n
$(eval_gettext "To execute a COMMAND: \$DISPLAY_NAME COMMAND [ARGUMENT...]")"
    infomsg "$text"
}


# This function processes the script options and arguments.
function process_input {
    local command=$1

    if [[ ! -f $PROGRAM_PATH/$PROGRAM_NAME-$command ]]; then
        text="$DISPLAY_NAME: $command: $(gettext "command does not exist")
$USAGE_LINE"
        infomsg "$text"
        exit $ERROR
    fi
    shift
    exec "$PROGRAM_PATH/$PROGRAM_NAME-$command" "$@"
}


# This function controls the termination of the script.
function term_script {
    exit $OK
}


###############################################################################
# Main Script
###############################################################################

function main {
    init_script "$@"
    check_input "$@"
    process_input "$@"
    term_script
}

main "$@"
