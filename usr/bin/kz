#!/usr/bin/bash
# shellcheck source=kz_common.sh disable=SC2155
###############################################################################
# Run command.
#
# Written by Karel Zimmer <info@karelzimmer.nl>, CC0 1.0
# <https://creativecommons.org/publicdomain/zero/1.0>.
###############################################################################


###############################################################################
# Import
###############################################################################

source "$(dirname "$0")"/kz_common.sh


###############################################################################
# Constants
###############################################################################

readonly    PROGRAM_NAME='kz'
readonly    PROGRAM_DESC=$(gettext 'Run command')
readonly    DISPLAY_NAME=${PROGRAM_NAME/kz-/kz }

readonly    USAGE=$(eval_gettext "Usage: \$DISPLAY_NAME [-l|--list] \$OPTIONS_\
USAGE
          COMMAND [ARGUMENT...]")
readonly    HELP="$(eval_gettext "Usage: \$DISPLAY_NAME [OPTION...] COMMAND [A\
RGUMENT...]")

$PROGRAM_DESC.

$(gettext 'Options:')
$(gettext '  -l, --list     show available COMMANDs')
$OPTIONS_HELP

$(gettext 'Arguments:')
$(gettext '  COMMAND        execute COMMAND')
$(gettext '  ARGUMENT       ARGUMENTs for COMMAND')"

readonly    PROGRAM_PATH=$MODULE_PATH


###############################################################################
# Variables
###############################################################################

declare     exec_program_name=''


###############################################################################
# Functions
###############################################################################

# This function handles the script options and arguments.
function check_input {
    if [[ -z "$*" ]]; then
        msg_info "$USAGE"
        exit $ERROR
    fi

    # No parsing here with getopt like in all other scripts, because with
    # "kz COMMAND ARGUMENT..." the ARGUMENTs are for COMMAND, not for kz.
    case $1 in
        -h*|--h*)
            process_option_help
            exit $OK
            ;;
        -u*|--u*)
            process_option_usage
            exit $OK
            ;;
        -v*|--v*)
            process_option_version
            exit $OK
            ;;
        -l*|--l*)
            process_option_list
            exit $OK
            ;;
        -*)
            text="$DISPLAY_NAME: $(gettext 'invalid option'): $1
$USAGE_LINE"
            msg_info "$text"
            exit $ERROR
            ;;
        *)
            exec_program_name=$1
            ;;
    esac

    if ! [[ -f "$PROGRAM_PATH/kz-$exec_program_name" ]]; then
        text="$DISPLAY_NAME: $exec_program_name: \
$(gettext "command does not exist")
$USAGE_LINE"
        msg_info "$text"
        exit $ERROR
    fi
}


# This function displays all available commands.
function process_option_list {
    text="$(gettext 'The following COMMANDs are available:')

$(gettext 'NUM  COMMAND')\n"
    text+=$(
        find    "$PROGRAM_PATH"/kz-*    \
                -maxdepth 1             \
                -type f                 \
                -executable             \
                -readable               \
                -not -name '*~'         \
                -not -name 'kz'         \
                -printf '%f\n'          |
        sort                            |
        sed     --expression='s/kz-//'  |
        nl      --number-width=3        \
                --number-format=rn      \
                --number-separator='  ' \
                --body-numbering=a
        )
    if ! $option_gui; then
        text+="\n
$(eval_gettext "To execute a COMMAND: \$BLUE\$DISPLAY_NAME COMMAND [ARGUMENT..\
.]\$NORMAL")"
    fi
    msg_info "$text"
}


# This function processes the script options and arguments.
function process_input {
    shift
    exec "$PROGRAM_PATH/kz-$exec_program_name" "$@"
}


# This function controls the termination of the script.
function term_script {
    exit $OK
}


###############################################################################
# Main Script
###############################################################################

function main {
    init_script "$@"
    check_input "$@"
    process_input "$@"
    term_script
}

main "$@"
