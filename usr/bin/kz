#!/usr/bin/env bash
# shellcheck source=kz_common.sh
###############################################################################
# SPDX-FileComment: Run command
#
# SPDX-FileCopyrightText: Karel Zimmer <info@karelzimmer.nl>
# SPDX-License-Identifier: CC0-1.0
###############################################################################


###############################################################################
# Imports
###############################################################################

source kz_common.sh


###############################################################################
# Constants
###############################################################################

readonly PROGRAM_NAME='kz'
PROGRAM_DESC=$(gettext 'Run command')
readonly PROGRAM_DESC

USAGE=$(eval_gettext "Usage: kz [-l|--list] \$OPTIONS_USAGE
          <command> [<arguments>]")
readonly USAGE

X_OPTIONS_HELP=$(gettext '  -l, --list     show available commands')
readonly X_OPTIONS_HELP

HELP="$(gettext "Usage: kz [<options>] <command> [<arguments>]")

$PROGRAM_DESC.

$(gettext 'Options:')
$X_OPTIONS_HELP
$OPTIONS_HELP

$(gettext 'Arguments:')
$(gettext '  <command>      execute command')
$(gettext '  <arguments>    arguments for command')"
readonly HELP

readonly X_OPTIONS_SHORT='l'
readonly X_OPTIONS_LONG=',list'


###############################################################################
# Functions
###############################################################################

# This function handles the script options and arguments.
function check_input() {
    local PARSED=''
    local -i RC=$OK

    if [[ -z $* ]]; then
        infomsg "$USAGE"
        exit $ERR
    fi

    if [[ $1 == -* ]]; then
        PARSED=$(
            getopt  --alternative                                       \
                    --options       "${OPTIONS_SHORT}$X_OPTIONS_SHORT"  \
                    --longoptions   "${OPTIONS_LONG}$X_OPTIONS_LONG"    \
                    --name          "$PROGRAM_NAME"                     \
                    --              "$@"
            ) || RC=$?
        if [[ $RC -ne $OK ]]; then
            infomsg "$USAGE"
            exit $ERR
        fi
        eval set -- "$PARSED"

        process_options   "$@"
        process_x_options "$@"
    fi
}


# This function handles the extra options and arguments.
function process_x_options() {
    while true; do
        case $1 in
            -l | --list )
                process_option_list
                exit $OK
                ;;
            -- )
                shift
                break
                ;;
            * )
                shift
                ;;
        esac
    done
}


# This function displays all available commands.
function process_option_list() {
    local TEXT=''

    TEXT="$(gettext 'The following commands are available:')

$(gettext 'NUM  COMMAND')
$(
    find    /usr/bin/kz-*           \
            -maxdepth 1             \
            -type f                 \
            -executable             \
            -readable               \
            -not -name '*~'         \
            -not -name kz           \
            -printf '%f\n'          |
    sort                            |
    sed     --expression='s/kz-//'  |
    nl      --number-width=3        \
            --number-format=rn      \
            --number-separator='  ' \
            --body-numbering=a
    )

$(gettext 'Use "kz <command> [<arguments>]" to execute a command'.)"
    infomsg "$TEXT"
}


# This function processes the script options and arguments.
function process_input() {
    local COMMAND=$1

    local TEXT=''

    if [[ ! -f /usr/bin/kz-$COMMAND ]]; then
        TEXT="$PROGRAM_NAME: $COMMAND: $(gettext "command does not exist")
$USAGE"
        infomsg "$TEXT"
        exit $ERR
    fi

    shift

    TEXT="Restart (exec kz-$COMMAND $*...)"
    logmsg "$TEXT"

    exec "kz-$COMMAND" "$@"
}


# This function controls the termination of the script.
function term_script() {
    exit $OK
}


###############################################################################
# Main
###############################################################################

function main() {
    init_script "$@"
    check_input "$@"
    process_input "$@"
    term_script
}

main "$@"
