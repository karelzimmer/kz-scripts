#!/usr/bin/env bash
# shellcheck source=kz_common.sh
###############################################################################
# Run command.
#
# This script runs commands, installed by package kz.
#
# Written by Karel Zimmer <info@karelzimmer.nl>, CC0 1.0 Universal
# <https://creativecommons.org/publicdomain/zero/1.0>, 2021-2023.
###############################################################################

###############################################################################
# Import
###############################################################################

PROGRAM_PATH=$(cd "$(dirname "$(realpath "$0")")" && pwd)
readonly PROGRAM_PATH
source "$PROGRAM_PATH"/kz_common.sh 2> >(systemd-cat) || exit 1


###############################################################################
# Constants
###############################################################################

readonly PROGRAM_NAME='kz'
PROGRAM_DESC=$(gettext 'Run command')
readonly PROGRAM_DESC
readonly DISPLAY_NAME=${PROGRAM_NAME/kz-/kz }

USAGE=$(eval_gettext "Usage: \$DISPLAY_NAME COMMAND [ARGUMENT...]
   or: \$DISPLAY_NAME [-l|--list] [-u|--usage] [-h|--help] [-v|--version]")
readonly USAGE
HELP="$(eval_gettext "Usage: \$DISPLAY_NAME COMMAND [ARGUMENT...]
   or: \$DISPLAY_NAME OPTION")

$PROGRAM_DESC.

$(gettext "Options:
  -l, --list     show available COMMANDs")
$OPTIONS_HELP

$(gettext "Arguments:
  COMMAND        execute COMMAND
  ARGUMENT       ARGUMENTs for COMMAND")"
# shellcheck disable=SC2034
readonly HELP


###############################################################################
# Variables
###############################################################################

declare exec_PROGRAM_NAME=''


###############################################################################
# Functions
###############################################################################

# This function handles the options and arguments.
function check_input {
    # No getopt here like in all other scripts; any specified options in
    # ARGUMENT, with kz COMMAND ARGUMENT, are for COMMAND, not for kz.
    if [[ -z "$*" ]]; then
        printf  "%s\n" "$USAGE"
        exit $ERROR
    fi
    case $1 in
        -h*|--h*)
            process_option_help
            exit $OK
            ;;
        -u*|--u*)
            process_option_usage
            exit $OK
            ;;
        -v*|--v*)
            process_option_version
            exit $OK
            ;;
        -l*|--l*)
            process_option_list
            exit $OK
            ;;
        -*)
            printf  "$DISPLAY_NAME: %s: $1%s\n$USAGE_LINE\n" \
                    "$(gettext 'invalid option')"
            exit $ERROR
            ;;
        *)
            exec_PROGRAM_NAME=$1
            ;;
    esac
    if ! [[ -f "$PROGRAM_PATH/kz-$exec_PROGRAM_NAME" ]]; then
        printf  "$DISPLAY_NAME: $exec_PROGRAM_NAME: %s\n$USAGE_LINE\n" \
                "$(gettext 'command does not exist')"
        exit $ERROR
    fi
}


# This function processes the list option and displays all available commands.
function process_option_list {
    info "$(gettext 'The following COMMANDs are available:

     COMMAND')"
    find    "$PROGRAM_PATH"/kz-*    \
            -maxdepth 1             \
            -type f                 \
            -executable             \
            -readable               \
            -not -name '*~'         \
            -not -name 'kz'         \
            -printf '%f\n'          |
    sort                            |
    sed     --expression='s/kz-//'  |
    nl      --number-width=2        \
            --number-format=rn      \
            --number-separator='] ' \
            --body-numbering=a      |
    sed     --expression='s/^/[/'
    info "
$(gettext 'To execute a COMMAND:') ${blue}$DISPLAY_NAME COMMAND${normal}"
}


# This function processes the input command.
function process_input {
    shift
    exec "$PROGRAM_PATH/kz-$exec_PROGRAM_NAME" "$@"
}


# This function controls the termination of the script.
function term_script {
    exit $OK
}


###############################################################################
# Main Script
###############################################################################

function main {
    init_script "$@"
    check_input "$@"
    process_input "$@"
    term_script
}

main "$@"
