#!/bin/bash
# shellcheck source=kz_common.sh
###############################################################################
# Run command.
#
# Written in 2021 by Karel Zimmer <info@karelzimmer.nl>, Creative Commons
# Public Domain Dedication <http://creativecommons.org/publicdomain/zero/1.0>.
###############################################################################

set -o errexit
program_path=$(dirname "$(realpath "$0")")
source "$program_path"/kz_common.sh


###############################################################################
# Constants
###############################################################################

declare program_name='kz'
declare program_desc
program_desc=$(gettext 'Run command')
declare display_name=${program_name/kz-/kz }

declare usage
# shellcheck disable=SC2034 # appears unused (eval_gettext \$)
usage="$(eval_gettext "Use: \$display_name OPDRACHT [ARGUMENT...]
 or: \$display_name [-l|--list] [-u|--usage] [-h|--help] [-v|--version]")"

# shellcheck disable=SC2034 # appears unused (eval_gettext \$)
# TODO
declare help="Gebruik: $display_name OPDRACHT [ARGUMENT...]
     of: $display_name OPTIE

$program_desc.

Opties:
  -l, --list     toon beschikbare OPDRACHTen
$options_help

Argumenten:
  OPDRACHT       voer OPDRACHT uit
  ARGUMENT       ARGUMENTen voor OPDRACHT"


###############################################################################
# Variables
###############################################################################

declare exec_program_name=''


###############################################################################
# Functions
###############################################################################

function check_input {
    # Hier geen getopt zoals in alle andere scripts; eventuele opgegeven opties
    # in ARGUMENT, met kz OPDRACHT ARGUMENT, zijn voor OPDRACHT, niet voor kz.
    if [[ -z "$*" ]]; then
        printf  "$display_name: %s\n$usage_line\n" \
                'verplicht argument ontbreekt'
        exit $err
    fi
    case $1 in
        -h|--help)
            kz_common.process_option_help
            exit $ok
            ;;
        -u|--usage)
            kz_common.process_option_usage
            exit $ok
            ;;
        -v|--version)
            kz_common.process_option_version
            exit $ok
            ;;
        -l|--list)
            process_option_list
            exit $ok
            ;;
        -*)
            printf  "$display_name: %s: %s\n$usage_line\n" \
                    "$1" 'ongeldige optie'
            exit $err
            ;;
        *)
            exec_program_name=$1
            ;;
    esac
    if ! [[ -f "$program_path/kz-$exec_program_name" ]]; then
        printf  "$display_name: %s: %s\n$usage_line\n" \
                "$exec_program_name" 'opdracht bestaat niet'
        exit $err
    fi
}


function process_option_list {
    info 'De volgende OPDRACHTen zijn beschikbaar:

     OPDRACHT'
    find    "$program_path"/kz-*            \
            -maxdepth 1                     \
            -type f                         \
            -executable                     \
            -readable                       \
            -not -name '*~'                 \
            -not -name 'kz'                 \
            -printf '%f\n'                  |
    sort                                    |
    sed     --expression='s/kz-//'          |
            nl      --number-width=2        \
                    --number-format=rn      \
                    --number-separator='] ' \
                    --body-numbering=a      |
            sed     --expression='s/^/[/'
    info "
Om een OPDRACHT uit te voeren:
${blue}$display_name OPDRACHT${normal}"
}


function process_input {
    shift
    exec "$program_path/kz-$exec_program_name" "$@"
}


function term_script {
    exit $ok
}


###############################################################################
# Script
###############################################################################

function main {
    kz_common.init_script "$@"
    check_input "$@"
    process_input "$@"
    term_script
}

main "$@"
