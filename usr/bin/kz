#!/usr/bin/env bash
# shellcheck source=kz_common.sh
###############################################################################
# SPDX-FileComment: Run command
#
# SPDX-FileCopyrightText: Karel Zimmer <info@karelzimmer.nl>
# SPDX-License-Identifier: CC0-1.0
###############################################################################


###############################################################################
# Imports
###############################################################################

source kz_common.sh


###############################################################################
# Variables
###############################################################################

declare KZ_PROGRAM_NAME='kz'
declare KZ_PROGRAM_DESC
        KZ_PROGRAM_DESC=$(gettext 'Run command')

declare KZ_DISPLAY_NAME=${KZ_PROGRAM_NAME/kz-/kz }

declare KZ_USAGE
        KZ_USAGE=$(eval_gettext "Usage: \$KZ_DISPLAY_NAME [-l|--list] \
\$KZ_OPTIONS_USAGE
          COMMAND [ARGUMENT...]")

declare KZ_X_OPTIONS_HELP
        KZ_X_OPTIONS_HELP=$(gettext '  -l, --list     show available COMMANDs')

declare KZ_HELP
        KZ_HELP="$(eval_gettext "Usage: \$KZ_DISPLAY_NAME [OPTION...] COMMAND \
[ARGUMENT...]")

$KZ_PROGRAM_DESC.

$(gettext 'Options:')
$KZ_X_OPTIONS_HELP
$KZ_OPTIONS_HELP

$(gettext 'Arguments:')
$(gettext '  COMMAND        execute COMMAND')
$(gettext '  ARGUMENT       ARGUMENTs for COMMAND')"

declare KZ_X_OPTIONS_SHORT='l'
declare KZ_X_OPTIONS_LONG=',list'


###############################################################################
# Functions
###############################################################################

# This function handles the script options and arguments.
function check_input() {
    local L_PARSED=''

    if [[ -z $* ]]; then
        infomsg "$KZ_USAGE"
        exit    $KZ_ERROR
    fi

    if [[ $1 == -* ]]; then
        L_PARSED=$(
            getopt  --alternative                                           \
                    --options="${KZ_OPTIONS_SHORT}$KZ_X_OPTIONS_SHORT"      \
                    --longoptions="${KZ_OPTIONS_LONG}$KZ_X_OPTIONS_LONG"    \
                    --name="$KZ_DISPLAY_NAME"                               \
                    -- "$@"
            )       || KZ_RC=$?
        if [[ $KZ_RC -ne $KZ_OK ]]; then
            infomsg "$KZ_USAGE"
            exit    $KZ_ERROR
        fi
        eval set -- "$L_PARSED"

        process_options   "$@"
        process_x_options "$@"
    fi
}


# This function handles the extra options and arguments.
function process_x_options() {
    while true; do
        case $1 in
            -l | --list )
                process_option_list
                exit $KZ_OK
                ;;
            -- )
                shift
                break
                ;;
            * )
                shift
                ;;
        esac
    done
}


# This function displays all available commands.
function process_option_list() {
    KZ_TEXT="$(gettext 'The following COMMANDs are available:')

$(gettext 'NUM  COMMAND')\n"
    KZ_TEXT+=$(
        find    "/usr/bin/$KZ_PROGRAM_NAME"-*           \
                -maxdepth 1                             \
                -type f                                 \
                -executable                             \
                -readable                               \
                -not -name '*~'                         \
                -not -name $KZ_PROGRAM_NAME             \
                -printf '%f\n'                          |
        sort                                            |
        sed     --expression="s/$KZ_PROGRAM_NAME-//"    |
        nl      --number-width=3                        \
                --number-format=rn                      \
                --number-separator='  '                 \
                --body-numbering=a
        )
    KZ_TEXT+="\n
$(eval_gettext "To execute a COMMAND: \$KZ_DISPLAY_NAME COMMAND \
[ARGUMENT...]")"
    infomsg "$KZ_TEXT"
}


# This function processes the script options and arguments.
function process_input() {
    local L_COMMAND=$1

    if [[ ! -f /usr/bin/$KZ_PROGRAM_NAME-$L_COMMAND ]]; then
        KZ_TEXT="$KZ_DISPLAY_NAME: $L_COMMAND: $(gettext "command does not \
exist")
$KZ_USAGE"
        infomsg "$KZ_TEXT"
        exit $KZ_ERROR
    fi

    shift

    KZ_TEXT="Restart (exec $KZ_PROGRAM_NAME-$L_COMMAND $*...)"
    logmsg "$KZ_TEXT"

    exec "$KZ_PROGRAM_NAME-$L_COMMAND" "$@"
}


# This function controls the termination of the script.
function term_script() {
    exit $KZ_OK
}


###############################################################################
# Main
###############################################################################

function main() {
    init_script     "$@"
    check_input     "$@"
    process_input   "$@"
    term_script
}

main "$@"
