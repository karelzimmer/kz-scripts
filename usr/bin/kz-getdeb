#!/usr/bin/bash
# shellcheck shell=bash source=kz_common.sh
###############################################################################
# Install kz package.
#
# Written by Karel Zimmer <info@karelzimmer.nl>, CC0 1.0 Universal
# <https://creativecommons.org/publicdomain/zero/1.0>, 2016-2023.
###############################################################################

###############################################################################
# Import
###############################################################################

readonly    PROGRAM_NAME='kz-getdeb'
            PROGRAM_PATH=$(cd "$(dirname "$(realpath "$0")")" && pwd)
readonly    PROGRAM_PATH
if ! source "$PROGRAM_PATH"/kz_common.sh &> >(systemd-cat --ide=$PROGRAM_NAME);
then
    printf  '%s\n'                              \
            '==== START get kz_common.sh =====' \
            &> >(systemd-cat --identifier=$PROGRAM_NAME)
    declare temp_kz_common=''
            temp_kz_common=$(mktemp -t "kz_common-XXXXXXXXXX.sh")
    wget    --output-document="$temp_kz_common"             \
            https://karelzimmer.nl/assets/kz/kz_common.sh   \
            &> >(systemd-cat --identifier=$PROGRAM_NAME)
    source  "$temp_kz_common" &> >(systemd-cat --identifier=$PROGRAM_NAME)
    rm      "$temp_kz_common" &> >(systemd-cat --identifier=$PROGRAM_NAME)
    printf  '%s\n'                              \
            '==== END get kz_common.sh ====='   \
            &> >(systemd-cat --identifier=$PROGRAM_NAME)
fi


###############################################################################
# Constants
###############################################################################

            PROGRAM_DESC=$(gettext 'Install kz package')
readonly    PROGRAM_DESC
readonly    DISPLAY_NAME=${PROGRAM_NAME/kz-/kz }

            USAGE=$(eval_gettext "Usage: \$DISPLAY_NAME \$OPTIONS_USAGE")
readonly    USAGE
            HELP="$(eval_gettext "Usage: \$DISPLAY_NAME [OPTION...]")

$PROGRAM_DESC.

$OPTIONS_HELP"
readonly    HELP


###############################################################################
# Variables
###############################################################################


###############################################################################
# Functions
###############################################################################

# This function handles the script options and arguments.
function check_input {
    local   files_found
            files_found=$(ls -C kz.{1..99} 2> /dev/null || true)
    local   parsed=''

    # If the kz.{1..99} files exist, possible after multiple wget's, clean them
    # up and start over.
    if [[ -n $files_found ]]; then
        printf  "$DISPLAY_NAME: kz $files_found %s\n$USAGE_LINE\n"  \
                "$(gettext 'files are deleted, please start again')"
        cleanup
        exit $ERROR
    fi

    parsed=$(
        getopt  --alternative                       \
                --options       "$OPTIONS_SHORT"    \
                --longoptions   "$OPTIONS_LONG"     \
                --name          "$DISPLAY_NAME"     \
                --              "$@"
        ) || ( printf '%s\n' "$USAGE_LINE"; exit $ERROR )
    eval set -- "$parsed"

    process_common_options "$@"

    while true; do
        case $1 in
            --)
                shift
                break
                ;;
            *)
                shift
                ;;
        esac
    done

    if [[ -n "$*" ]]; then
        printf  "$DISPLAY_NAME: $*: %s\n$USAGE_LINE\n" \
                "$(gettext 'arguments are not allowed')"
        exit $ERROR
    fi
}


# This function processes the script options and arguments.
function process_input {
    # shellcheck disable=SC2310
    if check_user_sudo; then
        sudo true
    else
        msg_info "$(eval_gettext 'Already performed by the administrator.')"
        term_script
    fi

    install_package
}


# This function performs a cleanup.
function cleanup {
    # Do not delete kz and kz.1 because of script and manual with the same
    # name.
    rm --force kz.{2..99}
    # But do delete them if in HOME, as described in Checklist installation.
    rm --force "$HOME"/kz "$HOME"/kz.1
}


# This function installs package kz.
function install_package {
    local   site_deb='https://karelzimmer.nl/assets/kz/kz_365_all.deb'
    local   temp_deb=''

    temp_deb=$(mktemp -t "$PROGRAM_NAME-XXXXXXXXXX.deb")
    # Prevent "N: ... user '_apt'. - pkgAcquire::Run (13: Permission denied)".
    chmod o+r "$temp_deb"

    msg_info "${bold}$(gettext 'Download')${normal} ($DISPLAY_NAME)"
    wget --output-document="$temp_deb" $site_deb

    msg_info "${bold}$(gettext 'Install')${normal} ($DISPLAY_NAME)"
    check_for_active_updates
    sudo    DEBIAN_FRONTEND=noninteractive  \
            apt-get                         \
            reinstall                       \
            --yes                           \
            "$temp_deb"
    rm  "$temp_deb"
}


# This function controls the termination of the script.
function term_script {
    local   title
            title=$(gettext 'Finished')
    local   text
            text=$(gettext "Package kz has been successfully installed.

Now follow the steps as described
in the Checklist installation.

Checklist installation can be found
on the site https://karelzimmer.nl,
under Linux.

Type 'exit' to close this window.")

    if type gnome-shell &> /dev/null; then
        clear -x
        TERM=ansi whiptail  --backtitle "$DISPLAY_NAME" \
                            --title     "$title"        \
                            --infobox   "$text"         \
                            16 47
    else
        msg_info "${bold}$(gettext 'Finished').${normal} ($DISPLAY_NAME)"
    fi
    cleanup
    exit 0
}


###############################################################################
# Main Script
###############################################################################

function main {
    init_script "$@"
    check_input "$@"
    process_input
    term_script
}

main "$@"
