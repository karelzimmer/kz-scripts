#!/bin/bash
# shellcheck source=kz_common.sh
###############################################################################
# Pakket kz installeren.
#
# Written in 2016 by Karel Zimmer <info@karelzimmer.nl>, Creative Commons
# Public Domain Dedication <http://creativecommons.org/publicdomain/zero/1.0>.
###############################################################################

set -o errexit
source <(wget --quiet --output-document=- \
        'https://karelzimmer.nl/data/linux/kz-scripts/usr/bin/kz_common.sh')


###############################################################################
# Constants
###############################################################################

declare program_name='kz-getdeb'
declare program_desc='Pakket kz installeren'
declare display_name=${program_name/kz-/kz }

declare usage
usage=$(eval_gettext "Usage: \$display_name \$options_usage")
declare help
help="$(eval_gettext "Usage: \$display_name [OPTION...]")

$program_desc.

Opties:
$options_help"


###############################################################################
# Variables
###############################################################################


###############################################################################
# Functions
###############################################################################

function check_input {
    local -i getopt_rc=0
    local parsed=''

    parsed=$(
        getopt  --alternative                       \
                --options       "$options_short"    \
                --longoptions   "$options_long"     \
                --name          "$display_name"     \
                --              "$@"
        ) || getopt_rc=$?
    if [[ $getopt_rc -ne $ok ]]; then
        info "$usage_line"
        exit $err
    fi
    eval set -- "$parsed"
    kz_common.process_options "$@"

    while true; do
        case $1 in
            --)
                shift
                break
                ;;
            *)
                shift
                ;;
        esac
    done

    if [[ "$*" ]]; then
        printf  "$display_name: $*: %s\n$usage_line\n" \
                "$(gettext 'arguments are not allowed')"
        exit $err
    fi

    kz_common.check_on_ac_power
    clear -x
    if ! kz_common.check_user_sudo; then
        term_script
    fi
}


function process_input {
    install_package
}


function install_package {
    local site_deb='https://karelzimmer.nl/downloads/kz/kz_365_all.deb'
    local temp_deb=''

    check_user_root

    title='Voortgang'
    text='Installeer pakket kz (kan even duren)...'
    TERM=ansi whiptail  --backtitle "$display_name" \
                        --title     "$title"        \
                        --infobox   "$text"         \
                        7 44

    # Bij Ubuntu Live sessie de universe repo aanzetten.
    if  [[ $HOSTNAME = 'ubuntu' && $USER = 'ubuntu' ]]; then
        kz_common.check_dpkgd_snapd
        sudo apt-add-repository --yes universe  |& $logcmd
        kz_common.check_dpkgd_snapd
        sudo apt-get update |& $logcmd
    fi

    # Installeer pakket kz.
    temp_deb=$(mktemp -t "$program_name-XXXXXXXXXX.deb")
    wget --output-document="$temp_deb" $site_deb |& $logcmd
    kz_common.check_dpkgd_snapd
    sudo    DEBIAN_FRONTEND=noninteractive  \
            apt-get                         \
            reinstall                       \
            --yes                           \
            "$temp_deb"                     |& $logcmd
    rm "$temp_deb" |& $logcmd
}


function check_user_root {
    if ! sudo -n true 2> >($logcmd); then
        while true; do
            title='Authenticatie nodig'
            text='
Authenticatie is vereist om pakket
kz met documenten en scripts van
Karel Zimmer te installeren.

Voer uw wachtwoord in:'
            # Constructie '3>&1 1>&2 2>&3' om stdout en stderr te wisselen.
            if printf '%s\n' "$(
                whiptail    --backtitle     "$display_name" \
                            --title         "$title"        \
                            --ok-button     'Verifiëren'    \
                            --cancel-button 'Annuleren'     \
                            --passwordbox   "$text"         \
                            13 38                           \
                            3>&1 1>&2 2>&3
                )" | sudo --stdin true 2> >($logcmd); then
                break
            else
                title='Fout'
                text='Er is een fout opgetreden.

Mogelijke oorzaak:
1. Geen of verkeerd wachtwoord ingevoerd
2. Op vorig scherm is <Annuleren> gekozen'
                if ! whiptail   --backtitle     "$display_name" \
                                --title         "$title"        \
                                --yes-button    'Opnieuw'       \
                                --no-button     'Stoppen'       \
                                --yesno         "$text"         \
                                11 45; then
                    title='Gestopt'
                    text='Programma is gestopt door de gebruiker'
                    TERM=ansi whiptail  --backtitle "$display_name" \
                                        --title     "$title"        \
                                        --infobox   "$text"         \
                                        7 42
                    exit $err
                fi
            fi
        done
    fi
}


function term_script {
    title='Gereed'
    text="Pakket kz is succesvol geïnstalleerd.

Volg nu de stappen zoals beschreven
in de Checklist installatie.

Checklist installatie is te vinden
op de site https://karelzimmer.nl,
onder Linux.

Typ 'exit' om dit venster te sluiten."
    TERM=ansi whiptail  --backtitle "$display_name" \
                        --title     "$title"        \
                        --infobox   "$text"         \
                        16 41
    if kz_common.developer check; then
        info '* ONTWIKKELAAR *'
        check_dependencies
        download_website
        pull_repos
        info '* status repos (gitstat)...'
        /home/"$USER"/bin/gitstat
    fi
    exit $ok
}


function check_dependencies {
    info '* controleer afhankelijkheden...'
    # Installeer ghostscript voor kz-build <man-pag>.pdf (ps2pdf).
    kz_common.check_dpkgd_snapd
    # Remove known line from output.
    sudo    apt-get                                 \
            install                                 \
            --yes                                   \
            curl                                    \
            fakeroot                                \
            gettext                                 \
            ghostscript                             \
            git                                     \
            jq                                      \
            lftp                                    \
            nmap                                    \
            pycodestyle                             \
            python3-pycodestyle                     \
            python3-autopep8                        \
            python3-pip                             \
            python-is-python3                       \
            w3c-linkchecker                         |
            sed '/ is reeds de nieuwste versie /d'  |
            sed '/ is already the newest version /d'
    sudo ln --force --relative --symbolic /usr/bin/pycodestyle /usr/bin/pep8
    sudo ln --force --relative --symbolic /usr/bin/pip3 /usr/bin/pip
    # Debian pakket is oud, snap is nieuwer.
    kz_common.check_dpkgd_snapd
    sudo snap install shellcheck |& $logcmd
    kz_common.check_dpkgd_snapd
    sudo snap install --classic code |& $logcmd
}


function download_website {
    local ftp_set='set ssl:verify-certificate no'
    local ftp_from=/httpdocs
    local ftp_to=$HOME/kz-uploads/dist
    local ftp_opts='--delete --verbose'
    local ftp_exclude='--exclude icaclient_20.04.0.21_amd64.deb'
    local ftp_cmd="mirror $ftp_exclude $ftp_opts $ftp_from $ftp_to; exit"
    local ftp_host=server106.hosting2go.nl
    local ftp_user=kzimmer
    local ftp_login=$HOME/.kz-$ftp_host

    info '* download website (lftp)...'
    if ! [[ -f $ftp_login ]]; then
        # < /dev/tty want FD 1 al in gebruik bij 'wget --output-document=-...'.
        read -rsp "Wachtwoord voor 'ftp://$ftp_host': " < /dev/tty
        printf '%s\n' "$REPLY" > "$ftp_login"
        printf '\n'
        chmod 'u=rw,g=,o=' "$ftp_login"
    fi
    if ! lftp   --user "$ftp_user"                  \
                --password "$(cat "$ftp_login")"    \
                -e "$ftp_set; $ftp_cmd"             \
                "$ftp_host"; then
        rm  "$ftp_login"
        info 'Downloaden website is mislukt.'
        return  $err
    fi
}


function pull_repos {
    local bin_repo=/home/"$USER"/bin

    git config --global user.name 'Karel Zimmer'
    git config --global user.email 'karel.zimmer@gmail.com'
    git config --global pull.ff only
    git config --global credential.helper store
    if ! git    clone                                   \
                https://github.com/karelzimmer/bin.git  \
                "$bin_repo"                             2> >($logcmd); then
        cd "$bin_repo"
        printf  "%s\n" "* initiële pull $(basename "$bin_repo") repo..."
        # Remove known line from output.
        git pull | sed '/Already up to date./d'
    fi
    info '* pull repos (gitpull)...'
    "$bin_repo"/gitpull
}


###############################################################################
# Script
###############################################################################

function main {
    kz_common.init_script "$@"
    check_input "$@"
    process_input
    term_script
}

main "$@"
