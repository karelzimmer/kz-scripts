#!/usr/bin/python3
"""
Update system.

This module performs a repair, update, and cleanup.
"""
###############################################################################
# Update system.
#
# Written by Karel Zimmer <info@karelzimmer.nl>, CC0 1.0 Universal
# <https://creativecommons.org/publicdomain/zero/1.0>, 2021-2024.
###############################################################################


###############################################################################
# Import
###############################################################################

import gettext
import kz_common
import subprocess
import sys

gettext.bindtextdomain('kz', '/usr/share/locale')
gettext.textdomain('kz')
_ = gettext.gettext


###############################################################################
# Constants
###############################################################################

PROGRAM_NAME = 'kz-update'
PROGRAM_DESC = (_('Update system'))
DISPLAY_NAME = PROGRAM_NAME.replace('kz-', 'kz ')


###############################################################################
# Variables
###############################################################################

command = ''
text = ''


###############################################################################
# Functions
###############################################################################

def perform_repair():
    """
    This function runs a repair of Debian packages.
    """
    print(f'{kz_common.BOLD}==== REPAIR ===={kz_common.NORMAL}\n')

    command = 'sudo dpkg --configure --pending'
    perform_command(command)

    command = 'sudo apt-get update --fix-missing'
    perform_command(command)

    command = 'sudo apt-get install --fix-broken'
    perform_command(command)


def perform_update():
    """
    This function updates installed Debian packages.
    """
    print(f'{kz_common.BOLD}==== UPDATE ===={kz_common.NORMAL}\n')

    command = 'sudo apt-get update'
    perform_command(command)

    command = 'sudo apt-get upgrade --yes'
    perform_command(command)

    command = 'sudo snap refresh'
    perform_command(command)


def perform_cleanup():
    """
    This function performs a Debian packages and snap packages cleanup.
    """
    print(f'{kz_common.BOLD}==== CLEANUP ===={kz_common.NORMAL}\n')

    command = 'sudo apt-get autoclean --yes'
    perform_command(command)

    command = 'sudo apt-get autoremove --yes'
    perform_command(command)

    # Start with LANGUAGE=en and only check for disabled does not always work.
    command = '# sudo snap cleanup: \n\
snap list --all |\n\
while read Name Version Rev Tracking Publisher Notes; do\n\
    if [[ $Notes == *uitgeschakeld* || $Notes == *disabled* ]]; then\n\
        sudo snap remove --purge "$Name" --revision="$Rev";\n\
    fi\n\
done'
    perform_command(command)


def perform_command(command):
    """
    This function executes a Bourne-Again SHell command.
    """
    print(f'{kz_common.BOLD}{command}{kz_common.NORMAL}')
    kz_common.check_for_active_updates()
    try:
        subprocess.run({command}, shell=True, check=True,
                       executable='/usr/bin/bash')
    except Exception as exc:
        text = str(exc)
        kz_common.msg_log(PROGRAM_NAME, text)
        text = _('Program {} encountered an error.').format(PROGRAM_NAME)
        kz_common.msg_error(PROGRAM_NAME, text)
        sys.exit(kz_common.error)
    else:
        print()


def check_reboot():
    """
    This function checks if reboot is needed.
    """
    try:
        with open('/var/run/reboot-required') as fh:
            print('\n' + _('*** The computer must restart to complete the '
                           'installation of updates ***'))
    except FileNotFoundError as fnf:
        text = str(fnf)
        kz_common.msg_log(PROGRAM_NAME, text)
    except Exception as exc:
        text = str(exc)
        kz_common.msg_log(PROGRAM_NAME, text)
        text = _('Program {} encountered an error.').format(PROGRAM_NAME)
        kz_common.msg_error(PROGRAM_NAME, text)
        sys.exit(kz_common.error)


###############################################################################
# Main Script
###############################################################################

kz_common.init_script(PROGRAM_NAME)

kz_common.process_options(PROGRAM_NAME, PROGRAM_DESC, DISPLAY_NAME)

kz_common.become_root(PROGRAM_NAME)

kz_common.check_on_ac_power(PROGRAM_NAME)

perform_repair()

perform_update()

perform_cleanup()

check_reboot()

kz_common.term_script(PROGRAM_NAME)
