#!/usr/bin/env bash
# shellcheck shell=bash
###############################################################################
# SPDX-FileComment: Download and install Debian or RPM package kz
#
# SPDX-FileCopyrightText: Karel Zimmer <info@karelzimmer.nl>
# SPDX-License-Identifier: CC0-1.0
###############################################################################


###############################################################################
# Imports
###############################################################################

export TEXTDOMAIN=kz
export TEXTDOMAINDIR=/usr/share/locale
source /usr/bin/gettext.sh


###############################################################################
# Constants
###############################################################################

readonly PROGRAM_NAME='kz-get'
PROGRAM_DESC=$(gettext 'Download and install Debian or RPM package kz')
readonly PROGRAM_DESC

HELP_USAGE="$(gettext "Usage: kz get [-d|--dev]")
$(gettext "       wget karelzimmer.nl/getkz; bash getkz [<options>]")

$PROGRAM_DESC.

$(gettext 'Options:')
$(gettext '  -d, --dev      download the development version of package kz')"
readonly HELP_USAGE

###############################################################################
# Globals
###############################################################################

declare OPTION_DEV=false


###############################################################################
# Functions
###############################################################################

# This function performs initial actions.
function init() {
    # Script-hardening.
    set -o errexit
    set -o errtrace
    set -o nounset
    set -o pipefail

    trap 'rm --force getkz getkz.{1..99} /tmp/kz-get-*' EXIT
}


# This function performs the script actions, such as checking the input.
function process() {
    local text=''

    check_input "$@"
    if grep --quiet debian /etc/os-release; then
        install_deb_package
    elif grep --quiet rhel /etc/os-release; then
        install_rpm_package
    else
        text="$(gettext 'fatal: unknown os release')"
        printf '%s\n' "$text" >&2
        exit 1
    fi
}


# This function checks the script input.
function check_input() {
    local option=${1:-''}
    local program_name=${PROGRAM_NAME/kz-/kz }
    local text=''

    case $option in
        '' )
            return 0
            ;;
        -d | --dev )
            OPTION_DEV=true
            return 0
            ;;
        -* )
            text="$program_name: $(gettext 'unknown option') '$*'
$HELP_USAGE"
            if man kz-get &> /dev/null; then
                text+="

$(gettext "Type 'man kz get' for more information.")"
            fi
            printf '%s\n' "$text"
            exit 1
            ;;
        * )
            text="$program_name: $*: $(gettext 'arguments are not allowed')
$HELP_USAGE"
            if man kz-get &> /dev/null; then
                text+="

$(gettext "Type 'man kz get' for more information.")"
            fi
            printf '%s\n' "$text"
            exit 1
            ;;
    esac
}


# This function downloads and installs Debian package kz.
function install_deb_package() {
    local kz_deb_dev_site_file="\
https://karelzimmer.nl/assets/packages/kz-dev_4.2.1-1_all.deb"
    local kz_deb_prd_site_file="\
https://karelzimmer.nl/assets/packages/kz_4.2.1-1_all.deb"
    local kz_deb_local_file=''
    local kz_deb_site_file=''

    kz_deb_local_file=$(mktemp -t "$PROGRAM_NAME-XXXXXXXXXX.deb")

    if $OPTION_DEV; then
        kz_deb_site_file=$kz_deb_dev_site_file
    else
        kz_deb_site_file=$kz_deb_prd_site_file
    fi

    sudo true
    wget --output-document="$kz_deb_local_file" "$kz_deb_site_file"
    # Prevent the message:
    # ...file '/tmp/kz-get-XXXXXXXXXX.deb' couldn't be accessed by user '_apt'.
    chmod o+r "$kz_deb_local_file"

    check_package_manager
    sudo    DEBIAN_FRONTEND=noninteractive  \
            apt-get                         \
            install                         \
            --allow-downgrades              \
            --reinstall                     \
            --assume-yes                    \
            "$kz_deb_local_file"

    # Zenity is used to display a dialog when the script is run in a
    # *graphical* environment, usually already installed. If not, install it.
    if [[ ${DISPLAY-} ]]; then
        if ! type zenity &> /dev/null; then
                check_package_manager
                sudo apt-get install --assume-yes zenity
        fi
    fi
}


# This function checks for another running package manager and waits for the
# next check if so.
function check_package_manager() {
    local -i sleep=5
    local text=''

    while sudo  fuser                           \
                --silent                        \
                /var/cache/debconf/config.dat   \
                /var/{lib/{dpkg,apt/lists},cache/apt/archives}/lock*; do
        text=$(eval_gettext "Wait \$sleep seconds for another package manager \
to finish")
        printf '%s\n' "$text..."
        sleep $sleep
    done
}


# This function installs RPM package kz.
function install_rpm_package() {
    local kz_rpm_prd_site_file="\
https://karelzimmer.nl/assets/packages/kz-4.2.1-1.noarch.rpm"
    local kz_rpm_dev_site_file="\
https://karelzimmer.nl/assets/packages/kz-dev-4.2.1-1.noarch.rpm"
    local kz_rpm_site_file=''
    local mode='install'

    if type kz &> /dev/null; then
        mode='reinstall'
    fi

    if $OPTION_DEV; then
        kz_rpm_site_file=$kz_rpm_dev_site_file
    else
        kz_rpm_site_file=$kz_rpm_prd_site_file
    fi

    sudo dnf $mode --assumeyes "$kz_rpm_site_file"

    # Zenity is used to display a dialog when the script is run in a
    # *graphical* environment, usually already installed. If not, install it.
    if [[ ${DISPLAY-} ]]; then
        if ! type zenity &> /dev/null; then
                sudo dnf install --assumeyes zenity
        fi
    fi
}


# This function controls the termination of the script.
function term() {
    local red='\033[1;31m'
    local normal='\033[0m'
    local text=''

    if $OPTION_DEV; then
        text=$red$(gettext "Please note: the development version of the kz \
package is installed")$normal
        printf '%b\n' "$text"
    fi

    text="
$(gettext "Package kz has been successfully installed.

Now follow the steps as described in the Checklist installation.

Checklist installation can be found on https://karelzimmer.nl/en.")"
    if [[ ${DISPLAY-} ]]; then
        text+="

$(gettext "Type 'exit' to close this window.")"
    fi
    printf '%s\n' "$text"

    exit 0
}


###############################################################################
# Main
###############################################################################

function main() {
    init    "$@"
    process "$@"
    term
}

main "$@"
