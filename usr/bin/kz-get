#!/usr/bin/env bash
# shellcheck shell=bash
###############################################################################
# SPDX-FileComment: Download and install Debian or RPM package kz
#
# SPDX-FileCopyrightText: Karel Zimmer <info@karelzimmer.nl>
# SPDX-License-Identifier: CC0-1.0
###############################################################################


###############################################################################
# Imports
###############################################################################

export TEXTDOMAIN=kz
export TEXTDOMAINDIR=/usr/share/locale
source /usr/bin/gettext.sh


###############################################################################
# Constants
###############################################################################

readonly PROGRAM_NAME='kz-get'
readonly PROGRAM_LOGS="systemd-cat --identifier=$PROGRAM_NAME"
PROGRAM_DESC=$(gettext 'Download and install Debian or RPM package kz')
readonly PROGRAM_DESC

USAGE="$(gettext "Usage: kz get [<options>]")
$(gettext "       wget karelzimmer.nl/getkz; bash getkz [<options>]")

$PROGRAM_DESC.

$(gettext 'Options:')
$(gettext '  -d, --dev      use the development version of kz')"

###############################################################################
# Globals
###############################################################################

declare KZ_GET_PID_FILE=''
declare OPTION_DEV=false
declare TEXT=''


###############################################################################
# Functions
###############################################################################

# This function performs initial actions.
function init() {
    # Script-hardening.
    set -o errexit
    set -o errtrace
    set -o nounset
    set -o pipefail

    trap 'rm --force getkz getkz.{1..99} /tmp/kz-get-*' EXIT
}


# This function performs the script actions, such as checking the input.
function process() {
    check_input "$@"
    prepare_processing
    if grep --quiet debian /etc/os-release; then
        install_deb_package
    elif grep --quiet rhel /etc/os-release; then
        install_rpm_package
    else
        TEXT="$(gettext 'fatal: unknown os release')"
        printf '%s\n' "$TEXT" >&2
        exit 1
    fi
}


# This function handles the options and arguments.
function check_input() {
    local option=${1:-''}

    case $option in
        '' )
            return 0
            ;;
        -d | --dev )
            OPTION_DEV=true
            return 0
            ;;
        '--version' )
            # Needed for kz-check, calls any script as "<script> --version".
            exit 0
            ;;
        -* )
            TEXT="kz get: $*: $(gettext 'only option -d or --dev is allowed')
$USAGE"
            printf '%s\n' "$TEXT" >&2
            exit 1
            ;;
        * )
            TEXT="kz get: $*: $(gettext 'arguments are not allowed')
$USAGE"
            printf '%s\n' "$TEXT" >&2
            exit 1
            ;;
    esac
}


# This function prepares further processing.
function prepare_processing() {
    local sleep=.5

    sudo true

    # Progress indicator with growing [=>, [==>, etc. as long as the pid file
    # exists, i.e. installation is in progress.
    KZ_GET_PID_FILE=$(mktemp -t "$PROGRAM_NAME-XXXXXXXXXX.pid")
    printf '%i\n' $$ > "$KZ_GET_PID_FILE"
    printf '%s' '[ '
    while test -e "$KZ_GET_PID_FILE"; do
        printf '\b%s' '=>'
        sleep $sleep
    done &
}


# This function downloads and installs Debian package kz.
function install_deb_package() {
    local kz_deb_dev_site_file="\
https://karelzimmer.nl/assets/packages/kz-dev_4.2.1-1_all.deb"
    local kz_deb_prd_site_file="\
https://karelzimmer.nl/assets/packages/kz_4.2.1-1_all.deb"
    local kz_deb_local_file=''
    local kz_deb_site_file=''

    kz_deb_local_file=$(mktemp -t "$PROGRAM_NAME-XXXXXXXXXX.deb")

    if $OPTION_DEV; then
        kz_deb_site_file=$kz_deb_dev_site_file
    else
        kz_deb_site_file=$kz_deb_prd_site_file
    fi

    wget    --output-document="$kz_deb_local_file"  \
            "$kz_deb_site_file"                     |& $PROGRAM_LOGS

    sudo    DEBIAN_FRONTEND=noninteractive  \
            apt-get                         \
            install                         \
            --allow-downgrades              \
            --reinstall                     \
            --assume-yes                    \
            "$kz_deb_local_file"            |& $PROGRAM_LOGS
}


# This function installs RPM package kz.
function install_rpm_package() {
    local kz_rpm_prd_site_file="\
https://karelzimmer.nl/assets/packages/kz-4.2.1-1.noarch.rpm"
    local kz_rpm_dev_site_file="\
https://karelzimmer.nl/assets/packages/kz-dev-4.2.1-1.noarch.rpm"
    local kz_rpm_site_file=''
    local mode='install'

    if type kz &> /dev/null; then
        mode='reinstall'
    fi

    if $OPTION_DEV; then
        kz_rpm_site_file=$kz_rpm_dev_site_file
    else
        kz_rpm_site_file=$kz_rpm_prd_site_file
    fi

    sudo dnf $mode --assumeyes "$kz_rpm_site_file" |& $PROGRAM_LOGS
}


# This function controls the termination of the script.
function term() {
    local red='\033[1;31m'
    local normal='\033[0m'

    # Progress indicator ends like [====]100%.
    rm --verbose "$KZ_GET_PID_FILE" |& $PROGRAM_LOGS
    printf '\b%s\n' '=]100%'

    if $OPTION_DEV; then
        TEXT=$red$(gettext "Please note: the development version of the kz \
package is installed")$normal
        printf '%b\n' "$TEXT"
    fi

    TEXT="
$(gettext "Package kz has been successfully installed.

Now follow the steps as described in the Checklist installation.

Checklist installation can be found on https://karelzimmer.nl/en.")"
    if [[ ${DISPLAY-} ]]; then
        TEXT+="

$(gettext "Type 'exit' to close this window.")"
    fi
    printf '%s\n' "$TEXT"

    exit 0
}


###############################################################################
# Main
###############################################################################

function main() {
    init    "$@"
    process "$@"
    term
}

main "$@"
