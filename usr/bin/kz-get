#!/usr/bin/env bash
# shellcheck shell=bash
###############################################################################
# SPDX-FileComment: Download and install Debian or RPM package kz
#
# SPDX-FileCopyrightText: Karel Zimmer <info@karelzimmer.nl>
# SPDX-License-Identifier: CC0-1.0
###############################################################################


###############################################################################
# Imports
###############################################################################

export TEXTDOMAIN=kz
export TEXTDOMAINDIR=/usr/share/locale
source /usr/bin/gettext.sh


###############################################################################
# Constants
###############################################################################

readonly PROGRAM_NAME='kz-get'
readonly DISPLAY_NAME=${PROGRAM_NAME/kz-/kz }

readonly LOGCMD="systemd-cat --identifier=$PROGRAM_NAME"
readonly RED='\033[1;31m'
readonly NORMAL='\033[0m'


###############################################################################
# Functions
###############################################################################

# This function performs initial actions.
function init() {
    # Script-hardening.
    set -o errexit
    set -o errtrace
    set -o nounset
    set -o pipefail

    trap 'rm --force getkz getkz.{1..99} /tmp/kz-get-*' EXIT
}


# This function performs the script actions, such as checking the input.
function process() {
    check_input "$@"
    prepare_processing
    if grep --quiet debian /etc/os-release; then
        install_deb_package
    elif grep --quiet rhel /etc/os-release; then
        install_rpm_package
    else
        TEXT="$PROGRAM_NAME: $(gettext 'fatal: unknown os release.')"
        printf '%s\n' "$TEXT"
        exit 1
    fi
}


# This function handles the options and arguments.
function check_input() {
    local OPTION=${1:-''}

    case $OPTION in
        '' )
            return 0
            ;;
        -d | --dev )
            OPTION_DEV=true
            return 0
            ;;
        '--version' )
            # Needed for kz-check, calls any script as "<script> --version".
            exit 0
            ;;
        -* )
            TEXT="$DISPLAY_NAME: $*: \
$(gettext 'only option -d or --dev is allowed')"
            printf '%s\n' "$TEXT"
            exit 1
            ;;
        * )
            TEXT="$DISPLAY_NAME: $*: $(gettext 'arguments are not allowed')"
            printf '%s\n' "$TEXT"
            exit 1
            ;;
    esac
}


# This function prepares further processing.
function prepare_processing() {
    local -i SLEEP=1

    sudo true

    # Progress indicator with growing [=>, [==>, etc. as long as the pid file
    # exists, i.e. installation is in progress.
    KZ_GET_PID_FILE=$(mktemp -t "$PROGRAM_NAME-XXXXXXXXXX.pid")
    printf '%i\n' $$ > "$KZ_GET_PID_FILE"
    printf '%s' '[ '
    while test -e "$KZ_GET_PID_FILE"; do
        printf '\b%s' '=>'
        sleep $SLEEP
    done &
}


# This function downloads and installs Debian package kz.
function install_deb_package() {
    local KZ_DEB_DEV_SITE_FILE="\
https://karelzimmer.nl/assets/packages/kz-dev_4.2.1-1_all.deb"
    local KZ_DEB_PRD_SITE_FILE="\
https://karelzimmer.nl/assets/packages/kz_4.2.1-1_all.deb"
    local KZ_DEB_LOCAL_FILE=''
    local KZ_DEB_SITE_FILE=''

    KZ_DEB_LOCAL_FILE=$(mktemp -t "$PROGRAM_NAME-XXXXXXXXXX.deb")

    if $OPTION_DEV; then
        KZ_DEB_SITE_FILE=$KZ_DEB_DEV_SITE_FILE
    else
        KZ_DEB_SITE_FILE=$KZ_DEB_PRD_SITE_FILE
    fi

    wget    --output-document="$KZ_DEB_LOCAL_FILE"  \
            "$KZ_DEB_SITE_FILE"                     |& $LOGCMD

    sudo    DEBIAN_FRONTEND=noninteractive  \
            apt-get                         \
            install                         \
            --allow-downgrades              \
            --reinstall                     \
            --assume-yes                    \
            "$KZ_DEB_LOCAL_FILE"            |& $LOGCMD

    rm --verbose "$KZ_DEB_LOCAL_FILE" |& $LOGCMD
}


# This function installs RPM package kz.
function install_rpm_package() {
    local KZ_RPM_PRD_SITE_FILE="\
https://karelzimmer.nl/assets/packages/kz-4.2.1-1.noarch.rpm"
    local KZ_RPM_DEV_SITE_FILE="\
https://karelzimmer.nl/assets/packages/kz-dev-4.2.1-1.noarch.rpm"
    local KZ_RPM_SITE_FILE=''
    local KZ_RPM_SITE_FILE=''
    local MODE='install'

    if type kz &> /dev/null; then
        MODE='reinstall'
    fi

    if $OPTION_DEV; then
        KZ_RPM_SITE_FILE=$KZ_RPM_DEV_SITE_FILE
    else
        KZ_RPM_SITE_FILE=$KZ_RPM_PRD_SITE_FILE
    fi

    sudo dnf $MODE --assumeyes "$KZ_RPM_SITE_FILE" |& $LOGCMD
}


# This function controls the termination of the script.
function term() {
    # Progress indicator ends like [====]100%.
    rm --verbose "$KZ_GET_PID_FILE" |& $LOGCMD
    printf '\b%s\n' '=]100%'

    if $OPTION_DEV; then
        TEXT=${RED}$(gettext "Please note: the development version of the kz \
package is installed")${NORMAL}
        printf '%b\n' "$TEXT"
    fi

    TEXT="
$(gettext "Package kz has been successfully installed.

Now follow the steps as described in the Checklist installation.

Checklist installation can be found on https://karelzimmer.nl/en.")"
    if [[ ${DISPLAY-} ]]; then
        TEXT+="

$(gettext "Type 'exit' to close this window.")"
    fi
    printf '%s\n' "$TEXT"

    exit 0
}


###############################################################################
# Main
###############################################################################

function main() {
    local KZ_GET_PID_FILE=''
    local OPTION_DEV=false
    local TEXT=''

    init    "$@"
    process "$@"
    term
}

main "$@"
