#!/usr/bin/env bash
# shellcheck shell=bash source=kz_common.sh
###############################################################################
# SPDX-FileComment: Download and install Debian or RPM package kz
#
# SPDX-FileCopyrightText: Karel Zimmer <info@karelzimmer.nl>
# SPDX-License-Identifier: CC0-1.0
###############################################################################


###############################################################################
# Imports
###############################################################################

declare KZ_COMMON_SITE_FILE='https://karelzimmer.nl/assets/scripts/'
        KZ_COMMON_SITE_FILE+='kz_common.sh'
declare KZ_COMMON_LOCAL_FILE
        KZ_COMMON_LOCAL_FILE=$(mktemp -t "kz_common-XXXXXXXXXX.sh")
wget    --output-document="$KZ_COMMON_LOCAL_FILE" $KZ_COMMON_SITE_FILE |&
        systemd-cat --identifier=kz-get --priority=debug
source  "$KZ_COMMON_LOCAL_FILE" 2> >(
        systemd-cat --identifier=kz-get --priority=debug)


###############################################################################
# Constants
###############################################################################

readonly PROGRAM_NAME='kz get'
PROGRAM_DESC=$(gettext 'Download and install Debian or RPM package kz')
readonly PROGRAM_DESC

USAGE=$(eval_gettext "Usage: \$PROGRAM_NAME \$OPTIONS_USAGE")
readonly USAGE

HELP="$(eval_gettext "Usage: \$PROGRAM_NAME [<options>]")

$PROGRAM_DESC.

$(gettext 'Options:')
$OPTIONS_HELP"
readonly HELP


###############################################################################
# Functions
###############################################################################

# This function handles the script options and arguments.
function check_input() {
    local PARSED=''
    local -i RC=$OK

    PARSED=$(
        getopt  --alternative                       \
                --options       "$OPTIONS_SHORT"    \
                --longoptions   "$OPTIONS_LONG"     \
                --name          "$PROGRAM_NAME"     \
                --              "$@"
        ) || RC=$?
    if [[ $RC -ne $OK ]]; then
        infomsg "$USAGE"
        exit $ERR
    fi
    eval set -- "$PARSED"

    process_options   "$@"
    process_x_options "$@"
}


# This function handles the extra options and arguments.
function process_x_options() {
    local TEXT=''

    while true; do
        case $1 in
            -- )
                shift
                break
                ;;
            * )
                shift
                ;;
        esac
    done

    if [[ -n $* ]]; then
        TEXT="$PROGRAM_NAME: $*: $(gettext 'arguments are not allowed')
$USAGE"
        infomsg "$TEXT"
        exit $ERR
    fi
}


# This function processes the script options and arguments.
function process_input() {
    local TEXT=''

    become_root_check || exit $OK
    prepare_processing
    if $APT; then
        download_apt_package
        prepare_install_apt_package
        install_apt_package
    elif $RPM; then
        prepare_install_rpm_package
        install_rpm_package
    else
        TEXT=$(gettext 'Unknown package manager.')
        errmsg "$TEXT"
        exit $ERR
    fi
}


# This function prepares further processing.
function prepare_processing() {
    KZ_DEB_LOCAL_FILE=$(mktemp -t "kz-get-XXXXXXXXXX.deb")

    sudo true

    # Progress indicator with growing [=>, [==>, etc. as long as the kz get
    # local file exists, i.e. installation is in progress.
    # If something fails, kz_common.sh will remove the kz-get local file and
    # other files upon exit.
    printf '[ '
    while test -e "$KZ_DEB_LOCAL_FILE"; do
        printf '\b%s' '=>'
        sleep 1
    done &
}


# This function downloads Debian package kz.
function download_apt_package() {
    local KZ_DEB_SITE_FILE="https://karelzimmer.nl/assets/packages/\
kz_4.2.1-1_all.deb"

    logmsg  'Download Debian package kz...'
    wget    --output-document="$KZ_DEB_LOCAL_FILE"  \
            "$KZ_DEB_SITE_FILE"                     |& $LOGCMD
}


# This function prepares the installation to make this script more robust.
function prepare_install_apt_package() {
    logmsg  'Repair before install Debian package kz...'
    check_apt_package_manager           |& $LOGCMD
    sudo dpkg --configure --pending     |& $LOGCMD
    check_apt_package_manager           |& $LOGCMD
    sudo apt-get update --fix-missing   |& $LOGCMD
    check_apt_package_manager           |& $LOGCMD
    sudo apt-get install --fix-broken   |& $LOGCMD
}


# This function installs Debian package kz.
function install_apt_package() {
    logmsg 'Install Debian package kz...'

    check_apt_package_manager |& $LOGCMD

    # Ubuntu 18.04: E: Invalid operation reinstall ==> install --reinstall.
    sudo    DEBIAN_FRONTEND=noninteractive  \
            apt-get                         \
            install                         \
            --reinstall                     \
            --assume-yes                    \
            "$KZ_DEB_LOCAL_FILE"            |& $LOGCMD
}


# This function prepares the installation to make this script more robust.
function prepare_install_rpm_package() {
    logmsg  'Repair before install RPM package kz...'
    sudo dnf clean all |& $LOGCMD
}


# This function installs RPM package kz.
function install_rpm_package() {
    local KZ_RPM_SITE_FILE="https://karelzimmer.nl/assets/packages/\
kz-4.2.1-1.noarch.rpm"
    local MODE='install'

    logmsg  'Install RPM package kz...'

    if [[ -n $(type -t kz) ]]; then
        MODE='reinstall'
    fi

    sudo dnf $MODE --assumeyes "$KZ_RPM_SITE_FILE" |& $LOGCMD
}


# This function controls the termination of the script.
function term_script() {
    local TEXT=''

    logmsg "Delete kz-get files ($PROGRAM_NAME)..."
    rm  --force                 \
        --verbose               \
        getkz                   \
        getkz.{1..99}           \
        "$KZ_DEB_LOCAL_FILE"    \
        "$KZ_COMMON_LOCAL_FILE" |& $LOGCMD

    # Progress indicator with [=>, [==>, etc. ends like [====]100%.
    printf '\b%s\n' '=]100%'

    TEXT="
$(gettext "Package kz has been successfully installed.

Now follow the steps as described in the Checklist installation.

Checklist installation can be found on https://karelzimmer.nl/en, under \
Linux.")"
    if $DESKTOP_ENVIRONMENT; then
        TEXT+="

$(gettext "Type 'exit' to close this window.")"
    fi
    infomsg "$TEXT"

    exit $OK
}


###############################################################################
# Main
###############################################################################

function main() {
    local KZ_DEB_LOCAL_FILE=''

    init_script "$@"
    check_input "$@"
    process_input
    term_script
}

main "$@"
