#!/usr/bin/env bash
# shellcheck shell=bash source=kz_common.sh
###############################################################################
# SPDX-FileComment: Download and install Debian or RPM package kz
#
# SPDX-FileCopyrightText: Karel Zimmer <info@karelzimmer.nl>
# SPDX-License-Identifier: CC0-1.0
###############################################################################


###############################################################################
# Imports
###############################################################################

declare KZ_COMMON_GITHUB_FILE='https://raw.githubusercontent.com/karelzimmer/'
        KZ_COMMON_GITHUB_FILE+='kz-scripts/main/usr/bin/kz_common.sh'
declare KZ_COMMON_LOCAL_FILE
        KZ_COMMON_LOCAL_FILE=$(mktemp -t "kz_common-XXXXXXXXXX.sh")
wget    --output-document="$KZ_COMMON_LOCAL_FILE" $KZ_COMMON_GITHUB_FILE |&
        systemd-cat --identifier=kz-get --priority=debug
source  "$KZ_COMMON_LOCAL_FILE" 2> >(
        systemd-cat --identifier=kz-get --priority=debug)


###############################################################################
# Variables
###############################################################################

declare PROGRAM_NAME='kz-get'
declare PROGRAM_DESC
        PROGRAM_DESC=$(gettext 'Download and install Debian or RPM package kz')
declare DISPLAY_NAME=${PROGRAM_NAME/kz-/kz }

declare USAGE
        USAGE=$(eval_gettext "Usage: \$DISPLAY_NAME \$OPTIONS_USAGE")

declare HELP
        HELP="$(eval_gettext "Usage: \$DISPLAY_NAME [OPTION...]")

$PROGRAM_DESC.

$(gettext 'Options:')
$OPTIONS_HELP"

declare KZ_GET_LOCAL_FILE=''


###############################################################################
# Functions
###############################################################################

# This function handles the script options and arguments.
function check_input() {
    local PARSED=''

    PARSED=$(
        getopt  --alternative                       \
                --options       "$OPTIONS_SHORT"    \
                --longoptions   "$OPTIONS_LONG"     \
                --name          "$DISPLAY_NAME"     \
                --              "$@"
        ) || RC=$?
    if [[ $RC -ne $OK ]]; then
        infomsg "$USAGE"
        exit $ERROR
    fi
    eval set -- "$PARSED"

    process_options   "$@"
    process_x_options "$@"
}


# This function handles the extra options and arguments.
function process_x_options() {
    while true; do
        case $1 in
            -- )
                shift
                break
                ;;
            * )
                shift
                ;;
        esac
    done

    if [[ -n $* ]]; then
        TEXT="$DISPLAY_NAME: $*: $(gettext 'arguments are not allowed')
$USAGE"
        infomsg "$TEXT"
        exit $ERROR
    fi
}


# This function processes the script options and arguments.
function process_input() {
    become_root_check || exit $OK
    prepare_processing
    if $DEB; then
        download_apt_package
        install_apt_package
    elif $RPM; then
        install_rpm_package
    else
        TEXT=$(gettext 'Unknown package manager.')
        errormsg "$TEXT"
        exit $ERROR
    fi
}


# This function prepares further processing.
function prepare_processing() {
    KZ_GET_LOCAL_FILE=$(mktemp -t "$PROGRAM_NAME-XXXXXXXXXX.deb")

    sudo true

    # Progress indicator with growing [=>, [==>, etc. as long as the kz get
    # local file exists, i.e. installation is in progress.
    # If something fails, kz_common.sh will remove the kz get local file and
    # other files upon exit.
    printf '[ '
    while test -e "$KZ_GET_LOCAL_FILE"; do
        printf '\b%s' '=>'
        sleep 1
    done &

    # Refresh package metadata.
    if $DEB; then
        # To "resolve" the message e.g. "N: Repository
        # 'http://deb.debian.org/debian bookworm InRelease'
        # changed its ‘Version’ value from '12.5' to '12.7'".
        sudo apt-get update --allow-releaseinfo-change |& $LOGCMD || true
    elif $RPM; then
        # Exit code 100 means there are updates available ==> ' || true'.
        sudo dnf check-update --refresh |& $LOGCMD || true
    fi
}


# This function downloads Debian package kz.
function download_apt_package() {
    local   KZ_DEB_SITE_FILE='https://karelzimmer.nl/assets/packages/'
            KZ_DEB_SITE_FILE+='kz_4.2.1-1_all.deb'

    logmsg  'Download Debian package kz...'
    wget    --output-document="$KZ_GET_LOCAL_FILE"  \
            "$KZ_DEB_SITE_FILE"                     |& $LOGCMD
}


# This function installs Debian package kz.
function install_apt_package() {
    logmsg 'Install Debian package kz...'

    check_apt_package_manager |& $LOGCMD

    # Ubuntu 18.04: E: Invalid operation reinstall ==> install --reinstall.
    sudo    DEBIAN_FRONTEND=noninteractive  \
            apt-get                         \
            install                         \
            --reinstall                     \
            --assume-yes                    \
            "$KZ_GET_LOCAL_FILE"            |& $LOGCMD
}


# This function installs RPM package kz.
function install_rpm_package() {
    local   KZ_RPM_SITE_FILE='https://karelzimmer.nl/assets/packages/'
            KZ_RPM_SITE_FILE+='kz-4.2.1-1.noarch.rpm'
    local   MODE='install'

    logmsg  'Install RPM package kz...'

    if [[ -n $(type -t kz) ]]; then
        MODE='reinstall'
    fi

    sudo dnf $MODE --assumeyes "$KZ_RPM_SITE_FILE" |& $LOGCMD
}


# This function controls the termination of the script.
function term_script() {
    # Progress indicator with [=>, [==>, etc. ends like [====]100%.
    printf '\b%s\n' '=]100%'

    TEXT="
$(gettext "Package kz has been successfully installed.

Now follow the steps as described in the Checklist installation.

Checklist installation can be found on https://karelzimmer.nl/en, under \
Linux.")"
    if $DESKTOP_ENVIRONMENT; then
        TEXT+="

$(gettext "Type 'exit' to close this window.")"
    fi
    infomsg "$TEXT"

    logmsg "Delete kz get files ($PROGRAM_NAME)..."

    rm  --force                 \
        --verbose               \
        getkz                   \
        getkz.{1..99}           \
        "$KZ_GET_LOCAL_FILE"    \
        "$KZ_COMMON_LOCAL_FILE" |& $LOGCMD

    exit $OK
}


###############################################################################
# Main
###############################################################################

function main() {
    init_script "$@"
    check_input "$@"
    process_input
    term_script
}

main "$@"
