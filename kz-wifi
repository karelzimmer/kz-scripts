#!/bin/bash
# shellcheck source=kz_common.sh
###############################################################################
# Wifi-gegevens tonen.
#
# Geschreven door Karel Zimmer <info@karelzimmer.nl>, Creative Commons Publiek
# Domein Verklaring <http://creativecommons.org/publicdomain/zero/1.0/deed.nl>.
###############################################################################


###############################################################################
# Constants
###############################################################################

readonly program_name='kz-wifi'
readonly program_desc='Wifi-informatie tonen'
readonly display_name=${program_name/kz-/kz }

# Redhat reports $0 as '-bash', dirname "$0" -> dirname: invalid option -- 'b'.
program_path=$(realpath "$(dirname  "${0/#-/}")")
readonly program_path
source  "$program_path"/kz_common.sh

readonly options_short+='g'
readonly options_long+=',gui'
readonly usage="Gebruik: $display_name $options_usage [-g|--gui]"
readonly help="Gebruik: $display_name [OPTIE...]

$program_desc.

Opties:
$options_help
  -g, --gui      start in grafische modus"


###############################################################################
# Variables
###############################################################################

declare option_gui=false


###############################################################################
# Functions
###############################################################################

function check_input {
    local -i    getopt_rc=0
    local       parsed=''

    parsed=$(
        getopt  --alternative                       \
                --options       "$options_short"    \
                --longoptions   "$options_long"     \
                --name          "$display_name"     \
                --              "$@"
        ) || getopt_rc=$?
    if [[ $getopt_rc -ne $ok ]]; then
        info "$usageline"
        exit $err
    fi
    eval set -- "$parsed"
    kz_common.process_options "$@"

    while true; do
        case $1 in
            -g|--gui)
                option_gui=true
                kz_common.reset_terminal_attributes
                shift
                ;;
            --)
                shift
                break
                ;;
            *)
                shift
                ;;
        esac
    done

    if [[ "$*" ]]; then
        info "$display_name:geen argumenten toegestaan"
        info "$usageline"
        exit $err
    fi
}


function process_input {
    local       nmcli_output=''
    local   -i  nmcli_rc=''
    local       text='Leg deze gegevens vast, en gebruik die om (later)
verbinding te maken met het draadloze netwerk'

    if $option_gui; then
        if nmcli_output=$(nmcli device wifi show-password 2> >($logcmd)); then
            info "Wifi-gegevens:

$nmcli_output

$text"
        else
            info 'Geen wifi-apparaat gevonden.'
        fi
    else
        info 'Wifi-gegevens:
'
        nmcli device wifi show-password || nmcli_rc=$?
        if [[ $nmcli_rc -eq 0 ]]; then
            info "
$text"
        else
            info 'Geen wifi-apparaat gevonden.'
        fi
    fi
}


function term_script {
    exit $ok
}


###############################################################################
# Script
###############################################################################

function main {
    kz_common.init_script "$@"
    check_input "$@"
    process_input
    term_script
}

main "$@"
