#!/usr/bin/bash
# shellcheck source=kz-common.sh
###############################################################################
# Pakket kz distribueren.                                                     #
#                                                                             #
# Geschreven door Karel Zimmer <info@karelzimmer.nl>.                         #
###############################################################################

PROGRAM_PATH=$(realpath "$(dirname  "$0")")
source "$PROGRAM_PATH"/kz-common.sh
PROGRAM_NAME=kz-deploy
DISPLAY_NAME=${PROGRAM_NAME/kz-/kz }
RELEASE_YEAR=2009


###############################################################################
# Global constants                                                            #
###############################################################################

readonly    RUN_AS_SUPERUSER=false
readonly    OPTIONS_SHORT=$OPTIONS_SHORT_COMMON
readonly    OPTIONS_LONG=$OPTIONS_LONG_COMMON
readonly    USAGE="Gebruik: $DISPLAY_NAME $OPTIONS_USAGE_COMMON"
readonly    HELP="Gebruik: $DISPLAY_NAME [OPTIE...]

Pakket kz distribueren.

Opties:
$OPTIONS_HELP_COMMON"

readonly    DEB_REPO=$HOME/kz-deb
readonly    DOCS_REPO=$HOME/kz-docs
readonly    SCRIPTS_REPO=$HOME/kz-scripts
readonly    UPLOADS_REPO=$HOME/kz-uploads
readonly    UPLOADS_DISTDIR=$UPLOADS_REPO/dist


###############################################################################
# Global variables                                                            #
###############################################################################


###############################################################################
# Functions                                                                   #
###############################################################################

check_input() {
    local       karel_full_name=''
    local       ubuntu_full_name=''
    local       debian_full_name=''
    local   -i  getopt_rc=0
    local       parsed=''
    local       prompt=''

    parsed=$(
        getopt  --alternative                       \
                --options       "$OPTIONS_SHORT"    \
                --longoptions   "$OPTIONS_LONG"     \
                --name          "$DISPLAY_NAME"     \
                --              "$@"
        )       || getopt_rc=$?
    if [[ $getopt_rc -ne $SUCCESS ]]; then
        printf '%s\n' "$USAGELINE" >&2
        exit $ERROR
    fi
    eval set -- "$parsed"
    process_common_options "$@"

    while true; do
        case $1 in
            --)
                shift
                break
                ;;
            *)
                shift
                ;;
        esac
    done

    if [[ "$*" ]]; then
        TEXT='geen argumenten opgeven'
        printf  "$DISPLAY_NAME: %s\n%s\n"   \
                "$TEXT"                     \
                "$USAGELINE"                >&2
        exit    $ERROR
    fi

    # Ben ik een ontwikkelaar?
    karel_full_name=$(
        getent  passwd  karel           |
        awk     -F':'   '{print $5}'    |
        awk     -F','   '{print $1}'    || true
        )
    ubuntu_full_name=$(
        getent  passwd  ubuntu          |
        awk     -F':'   '{print $5}'    |
        awk     -F','   '{print $1}'    || true
        )
    debian_full_name=$(
        getent  passwd  user            |
        awk     -F':'   '{print $5}'    |
        awk     -F','   '{print $1}'    || true
        )
    if ! [[ ($USER = karel  && $karel_full_name  = 'Karel Zimmer'    )  ||
            ($USER = ubuntu && $ubuntu_full_name = 'Live session user') ||
            ($USER = user   && $debian_full_name = 'Debian Live user')  ]]
    then
            TEXT='alleen uitvoeren als ontwikkelaar'
            printf  "$DISPLAY_NAME: %s\n%s\n"   \
                    "$TEXT"                     \
                    "$USAGELINE"                >&2
            exit    $ERROR
    fi

    # Een non-gui script gestart met optie gui.
    if $OPTION_GUI; then
        OPTION_GUI=false
        DESKTOP_TERMINAL=false
    fi

    check_user

    # Regel sudo maar gelijk voor verderop.
    prompt="Authenticatie is vereist voor onderdelen van '$DISPLAY_NAME'.
[sudo] wachtwoord voor %p: "
    sudo --prompt="$prompt" true
}


process_input() {
    check_dependencies
    check_names
    check_scripts
    build_package
    upload_website
    install_package
}


check_dependencies() {
    if ! command -v lftp 1> /dev/null; then
        # Voor upload website.
        log 'Installeer lftp...'
        sudo apt-get install --yes lftp |& $LOGCMD
    fi
}


check_names() {
    local -i check_rc=0

    info 'Controleer bestandsnamen (kz ckname)...'
    log "Check filenames with 'kz ckname'."
    "$SCRIPTS_REPO"/kz ckname   "$DEB_REPO"     \
                                "$DOCS_REPO"    \
                                "$SCRIPTS_REPO" || check_rc=$?
    if [[ $check_rc -ne $SUCCESS ]]; then
        warning "
Herstel alle meldingen hierboven en start daarna weer '$DISPLAY_NAME'."
        exit $check_rc
    fi
}


check_scripts() {
    local -i check_rc=0

    info 'Controleer scripts (kz ivp)...'
    log "Check scripts with 'kz ivp'."
    "$SCRIPTS_REPO"/kz ivp || check_rc=$?
    if [[ $check_rc -ne $SUCCESS ]]; then
        warning "
Herstel alle meldingen hierboven en start daarna weer '$DISPLAY_NAME'."
        exit $check_rc
    fi
}


build_package() {
    local -i check_rc=0

    info 'Bouw website en pakket (kz build)...'
    log "Build package with 'kz build'."
    "$SCRIPTS_REPO"/kz build || check_rc=$?
    if [[ $check_rc -ne $SUCCESS ]]; then
        warning "
Herstel alle meldingen hierboven en start daarna weer '$DISPLAY_NAME'."
        exit $check_rc
    fi
}


upload_website() {
    local ftp_set='set ssl:verify-certificate no'
    local ftp_from=$UPLOADS_DISTDIR
    local ftp_to=/httpdocs
    local ftp_opts='--reverse --delete --verbose'
    local ftp_cmd="mirror $ftp_opts $ftp_from $ftp_to; exit"
    local ftp_host=server106.hosting2go.nl
    local ftp_user=kzimmer
    local ftp_login=$HOME/.kz-$ftp_host

    info 'Upload website (lftp)...'
    if ! [[ -f $ftp_login ]]; then
        read -rsp "FTP-wachtwoord voor $ftp_host: "
        printf '%s\n' "$REPLY" > "$ftp_login"
        printf '\n'
        chmod 'u=rw,g=,o=' "$ftp_login" |& $LOGCMD
    fi
    if ! lftp   --user      "$ftp_user"             \
                --password  "$(cat "$ftp_login")"   \
                -e          "$ftp_set; $ftp_cmd"    \
                "$ftp_host"                         |& $LOGCMD; then
        rm      "$ftp_login"
        warning 'Uploaden website is mislukt.'
        warning 'Controleer de log...!'
        exit $WARNING
    fi
    sleep 5
}


install_package() {
    info 'Installeer pakket kz (kz getdeb)...'
    # Constructie '2> >($LOGCMD)' om stderr naar de log te krijgen.
    if ! wget -O- karelzimmer.nl/kz 2> >($LOGCMD) | bash; then
        warning 'Installeren pakket kz is niet uitgevoerd.'
        exit $WARNING
    fi
}


term_script() {
    exit $SUCCESS
}


###############################################################################
# Main line                                                                   #
###############################################################################

main() {
    init_script "$@"
    check_input "$@"
    process_input
    term_script
}


main "$@"
