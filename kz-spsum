#!/bin/bash
# shellcheck source=kz-common.sh
###############################################################################
# Controlebestanden opsplitsen.
#
# Geschreven door Karel Zimmer <info@karelzimmer.nl>.
###############################################################################
PROGRAM_PATH=$(realpath "$(dirname  "$0")")
source "$PROGRAM_PATH"/kz-common.sh
PROGRAM_NAME=kz-spsum
DISPLAY_NAME=${PROGRAM_NAME/kz-/kz }
RELEASE_YEAR=2016


###############################################################################
# Global constants
###############################################################################

readonly RUN_AS_SUPERUSER=false
readonly OPTIONS_SHORT=$OPTIONS_SHORT_COMMON
readonly OPTIONS_LONG=$OPTIONS_LONG_COMMON
readonly USAGE="Gebruik: $DISPLAY_NAME $OPTIONS_USAGE_COMMON"
readonly HELP="Gebruik: $DISPLAY_NAME [OPTIE...]

Controlebestanden opsplitsen.

Opties:
$OPTIONS_HELP_COMMON"

readonly SEARCHDIR=$HOME/Downloads
readonly HASHPROG=sha256sum


###############################################################################
# Global variables
###############################################################################

declare ISO_FILE=''
declare ISO_FILE_FOUND=false

###############################################################################
# Functions
###############################################################################

check_input() {
    local   -i  getopt_rc=0
    local       parsed=''

    parsed=$(
        getopt  --alternative                       \
                --options       "$OPTIONS_SHORT"    \
                --longoptions   "$OPTIONS_LONG"     \
                --name          "$DISPLAY_NAME"     \
                --              "$@"
        )       || getopt_rc=$?
    if [[ $getopt_rc -ne $SUCCESS ]]; then
        printf '%s\n' "$USAGELINE" >&2
        exit $ERROR
    fi
    eval set -- "$parsed"
    process_common_options "$@"

    while true; do
        case $1 in
            --)
                shift
                break
                ;;
            *)
                shift
                ;;
        esac
    done

    if [[ "$*" ]]; then
        TEXT='geen argumenten opgeven'
        printf "$DISPLAY_NAME: %s\n%s\n" "$TEXT" "$USAGELINE" >&2
        exit $ERROR
    fi

    # Een non-gui script gestart met optie gui.
    if $OPTION_GUI; then
        OPTION_GUI=false
        DESKTOP_TERMINAL=false
    fi

    check_user
}


process_input() {
    cd "$SEARCHDIR" || exit $ERROR

    for ISO_FILE in *.iso; do

        if ! [[ -f "$ISO_FILE" ]]; then
            continue
        fi

        ISO_FILE_FOUND=true

        create_checksum_file

    done

    if ! $ISO_FILE_FOUND; then
        warning "Geen beeldbestanden (.iso) gevonden in $SEARCHDIR."
        exit $WARNING
    fi
}


create_checksum_file() {
    local   -a  files=()
    local   -i  grep_rc=0

    if [[ -e $ISO_FILE.$HASHPROG ]]; then
        info "Beeldbestand $ISO_FILE heeft al controlebestand \
$ISO_FILE.$HASHPROG.\n"
        return $SUCCESS
    else
        for file in *; do
            files+=("$file")
        done
        grep    --word-regexp           \
                --regexp=" $ISO_FILE"   \
                --regexp="*$ISO_FILE"   \
                --exclude=*.iso         \
                --exclude=*512*         \
                --exclude-dir=*         \
                --no-filename           \
                -- "${files[@]}"        \
                > "$ISO_FILE.$HASHPROG" 2> >($LOGCMD) || grep_rc=$?
        if [[ $grep_rc -ne $SUCCESS ]]; then
            error "Geen controlesom gevonden voor $ISO_FILE.\n"
        else
            info "Controlebestand $ISO_FILE.$HASHPROG aangemaakt.\n"
       fi
    fi
}


term_script() {
    rm --force --verbose -- *SHA* |& $LOGCMD
    if $ISO_FILE_FOUND; then
        info "Om de beeldbestanden (.iso) te controleren voer uit:
    ${BLUE}cd $SEARCHDIR;$HASHPROG --check --ignore-missing *.$HASHPROG; cd \
-${NORMAL}


En om vervolgens USB-sticks te maken voer uit:
    ${BLUE}kz mkusbs${NORMAL}


Om de controlebestanden (.${HASHPROG}s) opnieuw te downloaden voer uit:
    ${BLUE}kz dliso --checksums${NORMAL}"
    fi
    exit $SUCCESS
}


###############################################################################
# Main line
###############################################################################

main() {
    init_script "$@"
    check_input "$@"
    process_input
    term_script
}


main "$@"


# EOF
